{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/anatole/source/css/blog_basic.css","path":"css/blog_basic.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/anatole/source/js/jquery-migrate-1.2.1.min.js","path":"js/jquery-migrate-1.2.1.min.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/js/jquery.appear.js","path":"js/jquery.appear.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/logo@2x.png","path":"images/logo@2x.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/anatole/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1},{"_id":"source/images/resource.jpg","path":"images/resource.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"themes/anatole/LICENSE","hash":"359cb81298c1fdbccf531548fc097466b0151be4","modified":1491059865000},{"_id":"themes/anatole/README.md","hash":"94cbb1f47236192db577dd5ebf8057977d74880c","modified":1491059865000},{"_id":"themes/anatole/_config.yml","hash":"f6473feff279fc16f0a7fc71d785d71d436dc920","modified":1491059865000},{"_id":"themes/anatole/package.json","hash":"cf731a3ebf3913747fccb6c4c6615eba7d7e88a4","modified":1491059865000},{"_id":"source/_posts/伏魔记-新伏魔记S攻略-游戏资源.md","hash":"664dc2fae85d9b47c7a762a103cec58a5fab6892","modified":1491404324000},{"_id":"source/_posts/使用Hexo搭建Github个人博客.md","hash":"014de8f7470748abc14d30a1f9b6db39fabf8724","modified":1491059865000},{"_id":"source/_posts/如何安装Git.md","hash":"44ae7ca86eafb611249acc9e7dcfc663d27bd18e","modified":1491059865000},{"_id":"source/_posts/多分支管理并部署hexo源码及静态资源文件.md","hash":"b1601e644fc7b51f47149b6df75f6d09ad0f8e7f","modified":1491059865000},{"_id":"source/_posts/如何安装Nodejs.md","hash":"31d15c63924f4f1a627a7fabeb22f83f4d9a9093","modified":1491059865000},{"_id":"source/_posts/绍兴游记：鲁迅故里.md","hash":"a60e3ff5d8f7febdcd92c6fdb7ee6f96a32f9b57","modified":1491059865000},{"_id":"source/_posts/设置国内npm镜像.md","hash":"b61e6cc6d48c951baa3e83df6d892aba47f9cd33","modified":1491059865000},{"_id":"source/about/index.md","hash":"ed2adb3445bf1afc58852c4668c176818a046f9c","modified":1491401349000},{"_id":"source/links/index.md","hash":"7db04237eca12e37dc8d4f8d7d2cc68d611c80ee","modified":1491060466000},{"_id":"themes/anatole/languages/zh-cn.yml","hash":"dab1823e036f4adb3b7ae9efe95a37a15e47bec2","modified":1491059865000},{"_id":"themes/anatole/layout/archive.jade","hash":"8f58996b55dc3db3c96d69e88b0a6db4167d025b","modified":1491059865000},{"_id":"themes/anatole/layout/category.jade","hash":"2f2f113e99eb1ebdac475edba23a330dbd2e77bd","modified":1491059865000},{"_id":"themes/anatole/layout/index.jade","hash":"53da3cfd498951148acb33de1574df80ae282dc5","modified":1491059865000},{"_id":"themes/anatole/layout/mixins.jade","hash":"994c88ca951ee5f4e7a0944bc45526e7eb022a49","modified":1491059865000},{"_id":"themes/anatole/layout/page.jade","hash":"300e3fa98fd7cb2627589d3555ab4863cfeedd0c","modified":1491059865000},{"_id":"themes/anatole/layout/post.jade","hash":"0b830bf13f3c82a936fa44c687b3911606cd8bec","modified":1491059865000},{"_id":"themes/anatole/layout/tag.jade","hash":"b2dde91815560830b6a0f1dfbdd83aca88aba969","modified":1491059865000},{"_id":"themes/anatole/layout/partial/comments.jade","hash":"ee43e2fa9bed77868f2340435e455a3e647428df","modified":1491059865000},{"_id":"themes/anatole/layout/partial/footer.jade","hash":"aa112488f7b5bb1dacce489e16cb1fdca71c981b","modified":1491059865000},{"_id":"themes/anatole/layout/partial/layout.jade","hash":"174050fa9ee919f5bcb2c5426224ec1968db672c","modified":1491059865000},{"_id":"themes/anatole/layout/partial/head.jade","hash":"3d6126d0b53a889a46ad61eb8cc0ab1b35446c49","modified":1491059865000},{"_id":"themes/anatole/layout/partial/nav.jade","hash":"4e365888e749cea790c4f61d238f3d1e8f029777","modified":1491059865000},{"_id":"themes/anatole/layout/partial/sidebar.jade","hash":"fd3d880b6a34d43dc847837b0578f18886b3c479","modified":1491059865000},{"_id":"themes/anatole/source/css/blog_basic.css","hash":"d64140d9df61546d8cb1c1539e02c0165d649a53","modified":1491402700000},{"_id":"themes/anatole/source/css/font-awesome.min.css","hash":"95d0b0c4d11105c81be1857b744076a1d2bed918","modified":1491059865000},{"_id":"themes/anatole/source/css/style.css","hash":"f7b1d6c73d0a0a0a578f173999077d240b93f0ee","modified":1491059865000},{"_id":"themes/anatole/source/css/style.scss","hash":"b14765e3bd79528b3557cdc01a67d561df3c1a39","modified":1491059865000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.eot","hash":"0183979056f0b87616cd99d5c54a48f3b771eee6","modified":1491059865000},{"_id":"themes/anatole/source/js/jquery-migrate-1.2.1.min.js","hash":"743052320809514fb788fe1d3df37fc87ce90452","modified":1491059865000},{"_id":"themes/anatole/source/js/jquery.appear.js","hash":"1f8067d7bd4c0bde30785e8016100f239e14394f","modified":1491059865000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.woff","hash":"7d65e0227d0d7cdc1718119cd2a7dce0638f151c","modified":1491059865000},{"_id":"themes/anatole/source/images/favicon.png","hash":"d659236704308954da9d64b101c4f54cc3f3255c","modified":1491059865000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.ttf","hash":"6225ccc4ec94d060f19efab97ca42d842845b949","modified":1491059865000},{"_id":"themes/anatole/source/images/logo.png","hash":"b1e7ac4ac9ede62f89b1180660b21442c95ca4d2","modified":1491059865000},{"_id":"themes/anatole/source/images/logo@2x.png","hash":"c5b8fe68d224f4cfaf3aee631355bf8c2f6a2e38","modified":1491059865000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.svg","hash":"cd980eab6db5fa57db670cb2e4278e67e1a4d6c9","modified":1491059865000},{"_id":"themes/anatole/source/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1491059865000},{"_id":"public/2017/04/01/设置国内npm镜像/index.html","hash":"ceaf6edd12ad7c6b23b63984c140935b7617c0af","modified":1491404384706},{"_id":"public/2017/03/28/多分支管理并部署hexo源码及静态资源文件/index.html","hash":"6f7ca3ca0afcf7d6f67f3f80103a8a9b56f00b3c","modified":1491404384706},{"_id":"public/links/index.html","hash":"2bfe15cbd498b6e2128f374084ca80ccac63f500","modified":1491404384706},{"_id":"public/2017/03/25/绍兴游记：鲁迅故里/index.html","hash":"3906fab91fb04b50f50039ac6d2155b5abdb1060","modified":1491404384706},{"_id":"public/about/index.html","hash":"11dfbd4e83b0bb50c2cd7e410f504e6697b7a974","modified":1491404384705},{"_id":"public/2017/03/24/如何安装Git/index.html","hash":"186abac8330b63172904348a5ea117783da35967","modified":1491404384706},{"_id":"public/2017/03/24/如何安装Nodejs/index.html","hash":"cce9f395bdf228e625a573d8f7e0f619622c03fc","modified":1491404384706},{"_id":"public/2017/03/24/使用Hexo搭建Github个人博客/index.html","hash":"a013cde9f4ccde8c80acf89df1ebc2ee979ce672","modified":1491404384707},{"_id":"public/archives/2017/index.html","hash":"4dde12657befc9abbada1efe0f83fde002803c6d","modified":1491404384707},{"_id":"public/index.html","hash":"6030da7187d81546b6fa837659b417295227c888","modified":1491404384707},{"_id":"public/archives/index.html","hash":"4dde12657befc9abbada1efe0f83fde002803c6d","modified":1491404384707},{"_id":"public/archives/2017/03/index.html","hash":"037ee2bf72a02b51a3e0f6b2c94b9fba76645f18","modified":1491404384707},{"_id":"public/archives/2017/04/index.html","hash":"8ca2475f23c009f6616117aca6d3e20ce3227427","modified":1491404384707},{"_id":"public/tags/hexo/index.html","hash":"d39e6e1623b1fc8bb78261ba0411d2bbe79afd20","modified":1491404384707},{"_id":"public/tags/旅游/index.html","hash":"b54a7dcc92997ccf092092009b4f252ca09657ac","modified":1491404384707},{"_id":"public/2017/04/05/伏魔记-新伏魔记S攻略-游戏资源/index.html","hash":"b9f876112e6cf1d0c5fd4fd783225d5b2d48eadf","modified":1491404384706},{"_id":"public/tags/手机游戏/index.html","hash":"412301b3364d7a561f64bffd05ee9d73741b7d2f","modified":1491404384707},{"_id":"public/tags/怀旧/index.html","hash":"ac7941c5c8797e0027842e15a2cd2da09e65599a","modified":1491404384707},{"_id":"public/tags/git/index.html","hash":"9d8cbf3680434c525654fbc5235e4f8de1443a8b","modified":1491404384707},{"_id":"public/tags/node-js/index.html","hash":"39b4c98cd3280cfc69b9376f9694b292dc26ff31","modified":1491404384707},{"_id":"public/tags/npm/index.html","hash":"024830979180bfa2ac11032f20b465eb6ddfb67c","modified":1491404384708},{"_id":"public/css/style.scss","hash":"b14765e3bd79528b3557cdc01a67d561df3c1a39","modified":1491404384711},{"_id":"public/fonts/fontawesome-webfont.eot","hash":"0183979056f0b87616cd99d5c54a48f3b771eee6","modified":1491404384711},{"_id":"public/images/favicon.png","hash":"d659236704308954da9d64b101c4f54cc3f3255c","modified":1491404384712},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"7d65e0227d0d7cdc1718119cd2a7dce0638f151c","modified":1491404384712},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"6225ccc4ec94d060f19efab97ca42d842845b949","modified":1491404384715},{"_id":"public/images/logo.png","hash":"b1e7ac4ac9ede62f89b1180660b21442c95ca4d2","modified":1491404384720},{"_id":"public/css/blog_basic.css","hash":"d64140d9df61546d8cb1c1539e02c0165d649a53","modified":1491404384723},{"_id":"public/css/style.css","hash":"f7b1d6c73d0a0a0a578f173999077d240b93f0ee","modified":1491404384723},{"_id":"public/js/jquery.appear.js","hash":"1f8067d7bd4c0bde30785e8016100f239e14394f","modified":1491404384723},{"_id":"public/js/jquery-migrate-1.2.1.min.js","hash":"743052320809514fb788fe1d3df37fc87ce90452","modified":1491404384723},{"_id":"public/css/font-awesome.min.css","hash":"95d0b0c4d11105c81be1857b744076a1d2bed918","modified":1491404384723},{"_id":"public/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1491404384724},{"_id":"public/images/logo@2x.png","hash":"c5b8fe68d224f4cfaf3aee631355bf8c2f6a2e38","modified":1491404384727},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"cd980eab6db5fa57db670cb2e4278e67e1a4d6c9","modified":1491404384729},{"_id":"source/images/resource.jpg","hash":"d4e760f88bdedc437cd9b6d5efa4df0ce1fbc2e2","modified":1491403114000},{"_id":"public/images/resource.jpg","hash":"d4e760f88bdedc437cd9b6d5efa4df0ce1fbc2e2","modified":1491404384712}],"Category":[],"Data":[],"Page":[{"title":"关于","date":"2017-03-19T14:58:19.000Z","_content":"\n**我**\n\n你好，我叫顾云翔，生于1993年3月2日，安徽省铜陵市人，目前生活在杭州，从事前端开发工作。\n\n高中时期，开始对电脑感兴趣，在一次电脑课上，使用VB语言写了一个加密小程序，让我对软件开发产生了兴趣。\n\n大学时代，参加了电脑学习小组，认识了改变我整个大学了老师，他教导了重新认识软件开发，为我指点软件开发的方向，在他的引导下，我从大二开始参加了很多软件开发的比赛，其中有各种市级、省级甚至国家级的比赛，也不乏百度这样互联网公司的比赛。\n\n例如：13年的百度Hackathon&Astar比赛，14年的高德LBS编程马拉松等。大学时使我经历了很多，也成长了很多。\n\n毕业后的我，开始从事前端开发工作。我喜欢这种所见即所得的开发方式，喜欢接触新的前端技术，自豪于现在前端技术可以应用于更多的领域。\n\n从一开始前台的web应用开发到后台的Node.js开发，从PC web应用到移动web应用，从hybrid混合应用开发到如今React Native原生应用开发，每一次技术的革新我都跟上了它前进的步伐，期望在今后的时光里，我能继续努力，勇往之前。\n\n生活中，我喜爱音乐，喜欢乐器，有一把40寸的吉他，还有一把27寸的乌克丽丽，喜欢唱歌，跑步，打游戏，看小说，如果没有安排，喜欢宅在家里，偶尔去健身房锻炼锻炼身体，喜欢美食，算是吃货吧，拿手好菜，青椒土豆肉丝。\n\n我的人生格言是：\"I ain't gonna be just a face in crowd.\"\n\n**博客**\n\n早些年，习惯在博客园、CSDN或者笔记软件里写文章，总结技术等。可是写的地方多了，文章也就散乱了，缺乏整理和归纳。\n\n现如今，想要通过这个博客，统一归纳这些年自己的整理和总结，也期望今后能有更好的文章写到这里与大家分享。\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2017-03-19 22:58:19\n---\n\n**我**\n\n你好，我叫顾云翔，生于1993年3月2日，安徽省铜陵市人，目前生活在杭州，从事前端开发工作。\n\n高中时期，开始对电脑感兴趣，在一次电脑课上，使用VB语言写了一个加密小程序，让我对软件开发产生了兴趣。\n\n大学时代，参加了电脑学习小组，认识了改变我整个大学了老师，他教导了重新认识软件开发，为我指点软件开发的方向，在他的引导下，我从大二开始参加了很多软件开发的比赛，其中有各种市级、省级甚至国家级的比赛，也不乏百度这样互联网公司的比赛。\n\n例如：13年的百度Hackathon&Astar比赛，14年的高德LBS编程马拉松等。大学时使我经历了很多，也成长了很多。\n\n毕业后的我，开始从事前端开发工作。我喜欢这种所见即所得的开发方式，喜欢接触新的前端技术，自豪于现在前端技术可以应用于更多的领域。\n\n从一开始前台的web应用开发到后台的Node.js开发，从PC web应用到移动web应用，从hybrid混合应用开发到如今React Native原生应用开发，每一次技术的革新我都跟上了它前进的步伐，期望在今后的时光里，我能继续努力，勇往之前。\n\n生活中，我喜爱音乐，喜欢乐器，有一把40寸的吉他，还有一把27寸的乌克丽丽，喜欢唱歌，跑步，打游戏，看小说，如果没有安排，喜欢宅在家里，偶尔去健身房锻炼锻炼身体，喜欢美食，算是吃货吧，拿手好菜，青椒土豆肉丝。\n\n我的人生格言是：\"I ain't gonna be just a face in crowd.\"\n\n**博客**\n\n早些年，习惯在博客园、CSDN或者笔记软件里写文章，总结技术等。可是写的地方多了，文章也就散乱了，缺乏整理和归纳。\n\n现如今，想要通过这个博客，统一归纳这些年自己的整理和总结，也期望今后能有更好的文章写到这里与大家分享。\n","updated":"2017-04-05T14:09:09.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj152ox4d0001da39yyb7sp57","content":"<p><strong>我</strong></p>\n<p>你好，我叫顾云翔，生于1993年3月2日，安徽省铜陵市人，目前生活在杭州，从事前端开发工作。</p>\n<p>高中时期，开始对电脑感兴趣，在一次电脑课上，使用VB语言写了一个加密小程序，让我对软件开发产生了兴趣。</p>\n<p>大学时代，参加了电脑学习小组，认识了改变我整个大学了老师，他教导了重新认识软件开发，为我指点软件开发的方向，在他的引导下，我从大二开始参加了很多软件开发的比赛，其中有各种市级、省级甚至国家级的比赛，也不乏百度这样互联网公司的比赛。</p>\n<p>例如：13年的百度Hackathon&amp;Astar比赛，14年的高德LBS编程马拉松等。大学时使我经历了很多，也成长了很多。</p>\n<p>毕业后的我，开始从事前端开发工作。我喜欢这种所见即所得的开发方式，喜欢接触新的前端技术，自豪于现在前端技术可以应用于更多的领域。</p>\n<p>从一开始前台的web应用开发到后台的Node.js开发，从PC web应用到移动web应用，从hybrid混合应用开发到如今React Native原生应用开发，每一次技术的革新我都跟上了它前进的步伐，期望在今后的时光里，我能继续努力，勇往之前。</p>\n<p>生活中，我喜爱音乐，喜欢乐器，有一把40寸的吉他，还有一把27寸的乌克丽丽，喜欢唱歌，跑步，打游戏，看小说，如果没有安排，喜欢宅在家里，偶尔去健身房锻炼锻炼身体，喜欢美食，算是吃货吧，拿手好菜，青椒土豆肉丝。</p>\n<p>我的人生格言是：”I ain’t gonna be just a face in crowd.”</p>\n<p><strong>博客</strong></p>\n<p>早些年，习惯在博客园、CSDN或者笔记软件里写文章，总结技术等。可是写的地方多了，文章也就散乱了，缺乏整理和归纳。</p>\n<p>现如今，想要通过这个博客，统一归纳这些年自己的整理和总结，也期望今后能有更好的文章写到这里与大家分享。</p>\n","excerpt":"","more":"<p><strong>我</strong></p>\n<p>你好，我叫顾云翔，生于1993年3月2日，安徽省铜陵市人，目前生活在杭州，从事前端开发工作。</p>\n<p>高中时期，开始对电脑感兴趣，在一次电脑课上，使用VB语言写了一个加密小程序，让我对软件开发产生了兴趣。</p>\n<p>大学时代，参加了电脑学习小组，认识了改变我整个大学了老师，他教导了重新认识软件开发，为我指点软件开发的方向，在他的引导下，我从大二开始参加了很多软件开发的比赛，其中有各种市级、省级甚至国家级的比赛，也不乏百度这样互联网公司的比赛。</p>\n<p>例如：13年的百度Hackathon&amp;Astar比赛，14年的高德LBS编程马拉松等。大学时使我经历了很多，也成长了很多。</p>\n<p>毕业后的我，开始从事前端开发工作。我喜欢这种所见即所得的开发方式，喜欢接触新的前端技术，自豪于现在前端技术可以应用于更多的领域。</p>\n<p>从一开始前台的web应用开发到后台的Node.js开发，从PC web应用到移动web应用，从hybrid混合应用开发到如今React Native原生应用开发，每一次技术的革新我都跟上了它前进的步伐，期望在今后的时光里，我能继续努力，勇往之前。</p>\n<p>生活中，我喜爱音乐，喜欢乐器，有一把40寸的吉他，还有一把27寸的乌克丽丽，喜欢唱歌，跑步，打游戏，看小说，如果没有安排，喜欢宅在家里，偶尔去健身房锻炼锻炼身体，喜欢美食，算是吃货吧，拿手好菜，青椒土豆肉丝。</p>\n<p>我的人生格言是：”I ain’t gonna be just a face in crowd.”</p>\n<p><strong>博客</strong></p>\n<p>早些年，习惯在博客园、CSDN或者笔记软件里写文章，总结技术等。可是写的地方多了，文章也就散乱了，缺乏整理和归纳。</p>\n<p>现如今，想要通过这个博客，统一归纳这些年自己的整理和总结，也期望今后能有更好的文章写到这里与大家分享。</p>\n"},{"title":"友链","date":"2017-03-19T16:03:10.000Z","_content":"[hexo](https://hexo.io/) 首页\n\n[hexo-theme-Anatole](https://github.com/Ben02/hexo-theme-Anatole) 主题 Github\n\n[Font Awesome](http://fontawesome.io/)\n","source":"links/index.md","raw":"---\ntitle: 友链\ndate: 2017-03-20 00:03:10\n---\n[hexo](https://hexo.io/) 首页\n\n[hexo-theme-Anatole](https://github.com/Ben02/hexo-theme-Anatole) 主题 Github\n\n[Font Awesome](http://fontawesome.io/)\n","updated":"2017-04-01T15:27:46.000Z","path":"links/index.html","comments":1,"layout":"page","_id":"cj152oxkf000oda39p5cft2ah","content":"<p><a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">hexo</a> 首页</p>\n<p><a href=\"https://github.com/Ben02/hexo-theme-Anatole\" target=\"_blank\" rel=\"external\">hexo-theme-Anatole</a> 主题 Github</p>\n<p><a href=\"http://fontawesome.io/\" target=\"_blank\" rel=\"external\">Font Awesome</a></p>\n","excerpt":"","more":"<p><a href=\"https://hexo.io/\">hexo</a> 首页</p>\n<p><a href=\"https://github.com/Ben02/hexo-theme-Anatole\">hexo-theme-Anatole</a> 主题 Github</p>\n<p><a href=\"http://fontawesome.io/\">Font Awesome</a></p>\n"}],"Post":[{"title":"伏魔记+新伏魔记S攻略+游戏资源","date":"2017-04-05T14:02:46.000Z","_content":"整理过去的笔记，发现这么一篇攻略，回想起小时候躲在被窝里熬夜打伏魔记的经历，真是满满的怀念啊～\n\n### 新版新增内容：\n游戏加入一些新装备和新剧情。\n现在发放游戏攻略。以下的任务必须都要做，才能进入仙界，不然游戏就崩溃了。\n一、在 **李虎庄园** 必须找到 **隔壁老王**，放走他。这样会有许愿神。复活袁小草。做善事。一报回一报。\n二、**蔡婆婆** 任务必须接，第二次下山，接蔡婆婆第二个任务，帮忙送信给万锁开。这样加上 **老孟** 的信，一共两封信，能得到五把 **万能钥匙**，分别对应 **三张卡片**，一个 **紫瞳魔灯**，一个 **尺骨双剑**。修改了愚人居的设定，三个卡片都能得到相对应的东西。不会被骗了。建议学习百虫欺天，潮海衣可以爆出三件。不用换。\n三、**建业城** 的 **富贵珠** 任务一定要打，并且一定要留一颗不能当，这样打完 **齐天大圣** 孙悟空后给他富贵珠，他会传你500年功力，500点防御和攻击。\n四、**南北村** 打完白虎要联系 **村民**，然后找 **周处** 要 **仙丹**。和 **村民** 对话把仙丹给出去。这样才有 **太上老君**。\n五、打 **天道** 时必须用妙手空空在他身上偷回他拿走的 **霸王钟**，一共两个，一个马上给 **袁萍址** 带上，另一个留包裹里。\n六、从 **愚人居** 出来，去建业城，把包里的霸王钟带身上，才能进入 **建业客栈二楼**，然后从二楼密道 **到钟山**， 把 **霸王钟** 卸下来，进入钟山大厅，**师叔** 会出现，把霸王钟还给钟山，他会传你张道陵师祖的 **九龙道剑**。伏魔第一神器！\n七、之后去 **忘忧村** 找 **蔡婆婆**，她会告诉你 **岔道口** 修路的地方修了个亭子，让你去看看。哪里就是 **仙界**。\n仙界里左下角有个 **钱壳**。在里面可以无限的拿钱。右上角有天道，但是他不动、也看不见，你得走到边上走不动了就点确定，他会传给小梅霸王钟咒。\n\n- - -\n\n### 三清山\n\n最初的一段时光是最难熬的了,刚开始没找师父前在百草地 西北角有把绝世好剑——钨龙剑!在 百草地 你还能找到金蝥、珠仙草（增加人物属性最大值的药品发现后马上吃掉）。\n来到百草地东面的三清宫内，进入无机阁 中找到师父。\n在 **无机阁** 北面的墙上有勾魂散、七步蛇毒和六脏蚀毒粉。\n在 **炼丹房** 内北面墙上的一排葫芦中可以找到两颗无忧仙丹，\n在 **两间普通弟子居** 中有天山盐、金鍪和一些钱币。\n在 **厨房** 中有玉蓝草、茶叶蛋和天山盐，\n在 **清风居（你自己的房间）** 中有发带、草鞋和一些钱币，其中的一张床可以休息（补满生命）。\n在 **大师兄居** 有些钱币和白衣，\n在 **师父居** 有降魔符、回神丹和定心符。\n以上是三清宫中可以找到的所有物品了。宫中有间药房,可以从柜台处买些青阴君带着。\n伏魔洞在百草地的西面，途中有座三清坟场，别在那儿耽误时间，直接去伏魔洞。\n要想拿到伏魔剑，先要打倒8个分布在8个灯洞中的护灯神兽，练成“降魔符法”后就能轻易地将其搞定。暗器和药品等到打护剑兽时再用，不然提前用完后打护剑兽会很困难的。\n在 **灯洞一** 有金钱\n在 **灯洞二** 有铁剑、平安符、铁剑、平安符\n在 **灯洞三** 有梅花镖、唤风符、石矶珠\n在 **灯洞五** 有梅花镖\n在 **灯洞六** 有青蛇卵、召雷符、毒铁菱、平安符\n在 **灯洞七** 有宇冰符\n建议等到练成剑气术才能去搞护剑兽。\n\n- - -\n\n### 忘忧村\n\n下山的途中经过摩天顶 ，去西面的 **观星亭** 拿 **督化笛**。\n在经过一些错综复杂的歇息台子时可以到处找些物品。\n清单如下：青铜铠、长剑、双手剑、步护腕、花布鞋、彩带、八仙石、飞蝗石、玉蓝草……\n![](/images/resource.jpg)\n三清山入口出西面的草地上有玉蓝草和七杳草根。\n来到忘忧村的途中有个向北的岔路口，一东一西的树上有青仙果和霸王花。\n进了忘忧村后，\n在 **村子东南角的井** 旁有定心符，在 **杂货店西面** 有茶叶蛋。\n在 **村子东北角的房** 内与主人打个招呼后在他屋内找到披风。\n在 **杂货店下面的房子** 中与主人说一下话后在屋内找到香袋。\n在 **村子西北角蔡婆婆的房子** 中与 **蔡婆婆** 说话，她会让你救她女儿，一定要按照上述顺序才能进入蔡婆婆的房间，房间中还有一枚战狂石。并且不能忘了救她的女儿，救出她女儿后会得到一件宝物！\n在 **村子南边的村长家** 中找到村长，带上 **慕容小梅**，把一些女孩用的装备都给她，在村长家中可以找到小梅穿的丝衣。\n在村子中 **武器店的东面的房间** 中找到 **老孟**，帮她送情书。\n在 **武器店** 中有袖里剑，除了 **砍刀** 其余不需要别的，因为遇上厉害的敌人时投掷砍刀可以伤敌hp-1034，而且价格适宜。\n等这一切都办完后，去村子西南处通往瘴气林入口的道路，\n途中经过一个岔路口时往西面的 **愚人居的井中** 有罗汉笑。\n回到岔路口继续向南走，要先往瘴气林中闯一下，然后去北面的 **猎户家** 中询问进入瘴气林的办法，猎户家旁有烤鹿肉。\n然后就去石梦城，在忘忧村东面，沿着路放心走，你不会迷路的！\n\n- - -\n\n\n### 石梦城\n\n在此顺便告诉你一个赚钱的绝招:一般物品在当铺卖时是以购买时的半价出售的,但有一种物品购买时价格是222元,而在当铺出售时是购买价格的两倍,这种物品就是—— **灵芝草**。\n还要提醒各位的是：身法在此游戏中起着重要作用，在某些关键时刻更是决定着生死，所以，一些降低身法的装备尽量别使用。\n到达石梦城后先买些装备（有些装备只有符合特定的属性的人物才能装备），\n然后在有两个人把守的 **李府的北面的房间** 中你会找到 **鲁斧**，你将答应帮他夺回芦藤铠甲，然后闯进李府，\n在 **李府西南角的房间** 中有子光金符、寒冰蛙、清凉油和袖里剑。\n在 **客厅** 桌上有千里飘，把李虎搞定后将会得到芦藤雄甲、芦藤雌甲和金色钥匙（如果在忘忧村没有找到蔡婆婆，那么将不会得到金色钥匙）。\n在 **李府客厅的东面的房间** 中捆着蔡婆婆的女儿，要使用金色钥匙才能进入。\n在 **下人房** 中放走老王,然后去 **老王家** 中找老王,他会告诉你李府有密道 ,密道入口就在关蔡婆婆女儿房间的后面。\n（**新伏魔记S版新增剧情：在 李虎庄园 必须找到隔壁老王，放走他。这样会有许愿神。复活袁小草。做善事。一报回一报。**）\n在 **李府宝库** 有八卦镜、飘仙果、千年朱果、枸杞仙果、袖里剑、缚龙索、金钱1000、魔王甲\n在 **石梦城东南角的塔砖** 中有穿心镖。（为了节省时间，此后一些不重要的物品将不再一一列出所在地点）\n穿上芦藤铠甲回到忘忧村后，先去蔡婆婆家 找到她，她会送你“七星灯”。\n进入毒瘴林，来到蛇窟山洞里，\n在 **蛇窟山洞一** 有召雷符、唤风符、宇冰符、狱火符、囤土符、定魂旗、七杳草根、回神丹、金钱200、霸王花\n在 **蛇窟隐洞** 有石矶珠、定神珠、鹿皮靴、紫竹符、灵芝草、菊黄散\n在 **蛇窟山洞二** 有青阴君、软较披风、佛天园、寒冰蛙。\n在 **蛇窟山洞三** 有两面针、天玉菩提、金毛虫、佛天园\n找到蛇妖，只需投掷出几把砍刀就能轻松战胜它。然后它将你封在洞中后，在一个通道的尽头你会发现出口进入蛇窟宝洞。\n在 **蛇窟宝洞** 有青蛇卵、红蝎卵、蜘蛛卵、金蝥、八仙石、渺影衣。\n拿完宝贝然后出来，蛇妖杀死了慕容小梅的父亲，再次战斗，在你将它彻底击毙之后，上山复命吧。\n到此为止，游戏的第一部分告一段落。\n\n未完待续...\n","source":"_posts/伏魔记-新伏魔记S攻略-游戏资源.md","raw":"---\ntitle: 伏魔记+新伏魔记S攻略+游戏资源\ndate: 2017-04-05 22:02:46\ntags: [手机游戏,怀旧]\n---\n整理过去的笔记，发现这么一篇攻略，回想起小时候躲在被窝里熬夜打伏魔记的经历，真是满满的怀念啊～\n\n### 新版新增内容：\n游戏加入一些新装备和新剧情。\n现在发放游戏攻略。以下的任务必须都要做，才能进入仙界，不然游戏就崩溃了。\n一、在 **李虎庄园** 必须找到 **隔壁老王**，放走他。这样会有许愿神。复活袁小草。做善事。一报回一报。\n二、**蔡婆婆** 任务必须接，第二次下山，接蔡婆婆第二个任务，帮忙送信给万锁开。这样加上 **老孟** 的信，一共两封信，能得到五把 **万能钥匙**，分别对应 **三张卡片**，一个 **紫瞳魔灯**，一个 **尺骨双剑**。修改了愚人居的设定，三个卡片都能得到相对应的东西。不会被骗了。建议学习百虫欺天，潮海衣可以爆出三件。不用换。\n三、**建业城** 的 **富贵珠** 任务一定要打，并且一定要留一颗不能当，这样打完 **齐天大圣** 孙悟空后给他富贵珠，他会传你500年功力，500点防御和攻击。\n四、**南北村** 打完白虎要联系 **村民**，然后找 **周处** 要 **仙丹**。和 **村民** 对话把仙丹给出去。这样才有 **太上老君**。\n五、打 **天道** 时必须用妙手空空在他身上偷回他拿走的 **霸王钟**，一共两个，一个马上给 **袁萍址** 带上，另一个留包裹里。\n六、从 **愚人居** 出来，去建业城，把包里的霸王钟带身上，才能进入 **建业客栈二楼**，然后从二楼密道 **到钟山**， 把 **霸王钟** 卸下来，进入钟山大厅，**师叔** 会出现，把霸王钟还给钟山，他会传你张道陵师祖的 **九龙道剑**。伏魔第一神器！\n七、之后去 **忘忧村** 找 **蔡婆婆**，她会告诉你 **岔道口** 修路的地方修了个亭子，让你去看看。哪里就是 **仙界**。\n仙界里左下角有个 **钱壳**。在里面可以无限的拿钱。右上角有天道，但是他不动、也看不见，你得走到边上走不动了就点确定，他会传给小梅霸王钟咒。\n\n- - -\n\n### 三清山\n\n最初的一段时光是最难熬的了,刚开始没找师父前在百草地 西北角有把绝世好剑——钨龙剑!在 百草地 你还能找到金蝥、珠仙草（增加人物属性最大值的药品发现后马上吃掉）。\n来到百草地东面的三清宫内，进入无机阁 中找到师父。\n在 **无机阁** 北面的墙上有勾魂散、七步蛇毒和六脏蚀毒粉。\n在 **炼丹房** 内北面墙上的一排葫芦中可以找到两颗无忧仙丹，\n在 **两间普通弟子居** 中有天山盐、金鍪和一些钱币。\n在 **厨房** 中有玉蓝草、茶叶蛋和天山盐，\n在 **清风居（你自己的房间）** 中有发带、草鞋和一些钱币，其中的一张床可以休息（补满生命）。\n在 **大师兄居** 有些钱币和白衣，\n在 **师父居** 有降魔符、回神丹和定心符。\n以上是三清宫中可以找到的所有物品了。宫中有间药房,可以从柜台处买些青阴君带着。\n伏魔洞在百草地的西面，途中有座三清坟场，别在那儿耽误时间，直接去伏魔洞。\n要想拿到伏魔剑，先要打倒8个分布在8个灯洞中的护灯神兽，练成“降魔符法”后就能轻易地将其搞定。暗器和药品等到打护剑兽时再用，不然提前用完后打护剑兽会很困难的。\n在 **灯洞一** 有金钱\n在 **灯洞二** 有铁剑、平安符、铁剑、平安符\n在 **灯洞三** 有梅花镖、唤风符、石矶珠\n在 **灯洞五** 有梅花镖\n在 **灯洞六** 有青蛇卵、召雷符、毒铁菱、平安符\n在 **灯洞七** 有宇冰符\n建议等到练成剑气术才能去搞护剑兽。\n\n- - -\n\n### 忘忧村\n\n下山的途中经过摩天顶 ，去西面的 **观星亭** 拿 **督化笛**。\n在经过一些错综复杂的歇息台子时可以到处找些物品。\n清单如下：青铜铠、长剑、双手剑、步护腕、花布鞋、彩带、八仙石、飞蝗石、玉蓝草……\n![](/images/resource.jpg)\n三清山入口出西面的草地上有玉蓝草和七杳草根。\n来到忘忧村的途中有个向北的岔路口，一东一西的树上有青仙果和霸王花。\n进了忘忧村后，\n在 **村子东南角的井** 旁有定心符，在 **杂货店西面** 有茶叶蛋。\n在 **村子东北角的房** 内与主人打个招呼后在他屋内找到披风。\n在 **杂货店下面的房子** 中与主人说一下话后在屋内找到香袋。\n在 **村子西北角蔡婆婆的房子** 中与 **蔡婆婆** 说话，她会让你救她女儿，一定要按照上述顺序才能进入蔡婆婆的房间，房间中还有一枚战狂石。并且不能忘了救她的女儿，救出她女儿后会得到一件宝物！\n在 **村子南边的村长家** 中找到村长，带上 **慕容小梅**，把一些女孩用的装备都给她，在村长家中可以找到小梅穿的丝衣。\n在村子中 **武器店的东面的房间** 中找到 **老孟**，帮她送情书。\n在 **武器店** 中有袖里剑，除了 **砍刀** 其余不需要别的，因为遇上厉害的敌人时投掷砍刀可以伤敌hp-1034，而且价格适宜。\n等这一切都办完后，去村子西南处通往瘴气林入口的道路，\n途中经过一个岔路口时往西面的 **愚人居的井中** 有罗汉笑。\n回到岔路口继续向南走，要先往瘴气林中闯一下，然后去北面的 **猎户家** 中询问进入瘴气林的办法，猎户家旁有烤鹿肉。\n然后就去石梦城，在忘忧村东面，沿着路放心走，你不会迷路的！\n\n- - -\n\n\n### 石梦城\n\n在此顺便告诉你一个赚钱的绝招:一般物品在当铺卖时是以购买时的半价出售的,但有一种物品购买时价格是222元,而在当铺出售时是购买价格的两倍,这种物品就是—— **灵芝草**。\n还要提醒各位的是：身法在此游戏中起着重要作用，在某些关键时刻更是决定着生死，所以，一些降低身法的装备尽量别使用。\n到达石梦城后先买些装备（有些装备只有符合特定的属性的人物才能装备），\n然后在有两个人把守的 **李府的北面的房间** 中你会找到 **鲁斧**，你将答应帮他夺回芦藤铠甲，然后闯进李府，\n在 **李府西南角的房间** 中有子光金符、寒冰蛙、清凉油和袖里剑。\n在 **客厅** 桌上有千里飘，把李虎搞定后将会得到芦藤雄甲、芦藤雌甲和金色钥匙（如果在忘忧村没有找到蔡婆婆，那么将不会得到金色钥匙）。\n在 **李府客厅的东面的房间** 中捆着蔡婆婆的女儿，要使用金色钥匙才能进入。\n在 **下人房** 中放走老王,然后去 **老王家** 中找老王,他会告诉你李府有密道 ,密道入口就在关蔡婆婆女儿房间的后面。\n（**新伏魔记S版新增剧情：在 李虎庄园 必须找到隔壁老王，放走他。这样会有许愿神。复活袁小草。做善事。一报回一报。**）\n在 **李府宝库** 有八卦镜、飘仙果、千年朱果、枸杞仙果、袖里剑、缚龙索、金钱1000、魔王甲\n在 **石梦城东南角的塔砖** 中有穿心镖。（为了节省时间，此后一些不重要的物品将不再一一列出所在地点）\n穿上芦藤铠甲回到忘忧村后，先去蔡婆婆家 找到她，她会送你“七星灯”。\n进入毒瘴林，来到蛇窟山洞里，\n在 **蛇窟山洞一** 有召雷符、唤风符、宇冰符、狱火符、囤土符、定魂旗、七杳草根、回神丹、金钱200、霸王花\n在 **蛇窟隐洞** 有石矶珠、定神珠、鹿皮靴、紫竹符、灵芝草、菊黄散\n在 **蛇窟山洞二** 有青阴君、软较披风、佛天园、寒冰蛙。\n在 **蛇窟山洞三** 有两面针、天玉菩提、金毛虫、佛天园\n找到蛇妖，只需投掷出几把砍刀就能轻松战胜它。然后它将你封在洞中后，在一个通道的尽头你会发现出口进入蛇窟宝洞。\n在 **蛇窟宝洞** 有青蛇卵、红蝎卵、蜘蛛卵、金蝥、八仙石、渺影衣。\n拿完宝贝然后出来，蛇妖杀死了慕容小梅的父亲，再次战斗，在你将它彻底击毙之后，上山复命吧。\n到此为止，游戏的第一部分告一段落。\n\n未完待续...\n","slug":"伏魔记-新伏魔记S攻略-游戏资源","published":1,"updated":"2017-04-05T14:58:44.000Z","_id":"cj152ox480000da39mwixw0mb","comments":1,"layout":"post","photos":[],"link":"","content":"<p>整理过去的笔记，发现这么一篇攻略，回想起小时候躲在被窝里熬夜打伏魔记的经历，真是满满的怀念啊～</p>\n<h3 id=\"新版新增内容：\"><a href=\"#新版新增内容：\" class=\"headerlink\" title=\"新版新增内容：\"></a>新版新增内容：</h3><p>游戏加入一些新装备和新剧情。<br>现在发放游戏攻略。以下的任务必须都要做，才能进入仙界，不然游戏就崩溃了。<br>一、在 <strong>李虎庄园</strong> 必须找到 <strong>隔壁老王</strong>，放走他。这样会有许愿神。复活袁小草。做善事。一报回一报。<br>二、<strong>蔡婆婆</strong> 任务必须接，第二次下山，接蔡婆婆第二个任务，帮忙送信给万锁开。这样加上 <strong>老孟</strong> 的信，一共两封信，能得到五把 <strong>万能钥匙</strong>，分别对应 <strong>三张卡片</strong>，一个 <strong>紫瞳魔灯</strong>，一个 <strong>尺骨双剑</strong>。修改了愚人居的设定，三个卡片都能得到相对应的东西。不会被骗了。建议学习百虫欺天，潮海衣可以爆出三件。不用换。<br>三、<strong>建业城</strong> 的 <strong>富贵珠</strong> 任务一定要打，并且一定要留一颗不能当，这样打完 <strong>齐天大圣</strong> 孙悟空后给他富贵珠，他会传你500年功力，500点防御和攻击。<br>四、<strong>南北村</strong> 打完白虎要联系 <strong>村民</strong>，然后找 <strong>周处</strong> 要 <strong>仙丹</strong>。和 <strong>村民</strong> 对话把仙丹给出去。这样才有 <strong>太上老君</strong>。<br>五、打 <strong>天道</strong> 时必须用妙手空空在他身上偷回他拿走的 <strong>霸王钟</strong>，一共两个，一个马上给 <strong>袁萍址</strong> 带上，另一个留包裹里。<br>六、从 <strong>愚人居</strong> 出来，去建业城，把包里的霸王钟带身上，才能进入 <strong>建业客栈二楼</strong>，然后从二楼密道 <strong>到钟山</strong>， 把 <strong>霸王钟</strong> 卸下来，进入钟山大厅，<strong>师叔</strong> 会出现，把霸王钟还给钟山，他会传你张道陵师祖的 <strong>九龙道剑</strong>。伏魔第一神器！<br>七、之后去 <strong>忘忧村</strong> 找 <strong>蔡婆婆</strong>，她会告诉你 <strong>岔道口</strong> 修路的地方修了个亭子，让你去看看。哪里就是 <strong>仙界</strong>。<br>仙界里左下角有个 <strong>钱壳</strong>。在里面可以无限的拿钱。右上角有天道，但是他不动、也看不见，你得走到边上走不动了就点确定，他会传给小梅霸王钟咒。</p>\n<hr>\n<h3 id=\"三清山\"><a href=\"#三清山\" class=\"headerlink\" title=\"三清山\"></a>三清山</h3><p>最初的一段时光是最难熬的了,刚开始没找师父前在百草地 西北角有把绝世好剑——钨龙剑!在 百草地 你还能找到金蝥、珠仙草（增加人物属性最大值的药品发现后马上吃掉）。<br>来到百草地东面的三清宫内，进入无机阁 中找到师父。<br>在 <strong>无机阁</strong> 北面的墙上有勾魂散、七步蛇毒和六脏蚀毒粉。<br>在 <strong>炼丹房</strong> 内北面墙上的一排葫芦中可以找到两颗无忧仙丹，<br>在 <strong>两间普通弟子居</strong> 中有天山盐、金鍪和一些钱币。<br>在 <strong>厨房</strong> 中有玉蓝草、茶叶蛋和天山盐，<br>在 <strong>清风居（你自己的房间）</strong> 中有发带、草鞋和一些钱币，其中的一张床可以休息（补满生命）。<br>在 <strong>大师兄居</strong> 有些钱币和白衣，<br>在 <strong>师父居</strong> 有降魔符、回神丹和定心符。<br>以上是三清宫中可以找到的所有物品了。宫中有间药房,可以从柜台处买些青阴君带着。<br>伏魔洞在百草地的西面，途中有座三清坟场，别在那儿耽误时间，直接去伏魔洞。<br>要想拿到伏魔剑，先要打倒8个分布在8个灯洞中的护灯神兽，练成“降魔符法”后就能轻易地将其搞定。暗器和药品等到打护剑兽时再用，不然提前用完后打护剑兽会很困难的。<br>在 <strong>灯洞一</strong> 有金钱<br>在 <strong>灯洞二</strong> 有铁剑、平安符、铁剑、平安符<br>在 <strong>灯洞三</strong> 有梅花镖、唤风符、石矶珠<br>在 <strong>灯洞五</strong> 有梅花镖<br>在 <strong>灯洞六</strong> 有青蛇卵、召雷符、毒铁菱、平安符<br>在 <strong>灯洞七</strong> 有宇冰符<br>建议等到练成剑气术才能去搞护剑兽。</p>\n<hr>\n<h3 id=\"忘忧村\"><a href=\"#忘忧村\" class=\"headerlink\" title=\"忘忧村\"></a>忘忧村</h3><p>下山的途中经过摩天顶 ，去西面的 <strong>观星亭</strong> 拿 <strong>督化笛</strong>。<br>在经过一些错综复杂的歇息台子时可以到处找些物品。<br>清单如下：青铜铠、长剑、双手剑、步护腕、花布鞋、彩带、八仙石、飞蝗石、玉蓝草……<br><img src=\"/images/resource.jpg\" alt=\"\"><br>三清山入口出西面的草地上有玉蓝草和七杳草根。<br>来到忘忧村的途中有个向北的岔路口，一东一西的树上有青仙果和霸王花。<br>进了忘忧村后，<br>在 <strong>村子东南角的井</strong> 旁有定心符，在 <strong>杂货店西面</strong> 有茶叶蛋。<br>在 <strong>村子东北角的房</strong> 内与主人打个招呼后在他屋内找到披风。<br>在 <strong>杂货店下面的房子</strong> 中与主人说一下话后在屋内找到香袋。<br>在 <strong>村子西北角蔡婆婆的房子</strong> 中与 <strong>蔡婆婆</strong> 说话，她会让你救她女儿，一定要按照上述顺序才能进入蔡婆婆的房间，房间中还有一枚战狂石。并且不能忘了救她的女儿，救出她女儿后会得到一件宝物！<br>在 <strong>村子南边的村长家</strong> 中找到村长，带上 <strong>慕容小梅</strong>，把一些女孩用的装备都给她，在村长家中可以找到小梅穿的丝衣。<br>在村子中 <strong>武器店的东面的房间</strong> 中找到 <strong>老孟</strong>，帮她送情书。<br>在 <strong>武器店</strong> 中有袖里剑，除了 <strong>砍刀</strong> 其余不需要别的，因为遇上厉害的敌人时投掷砍刀可以伤敌hp-1034，而且价格适宜。<br>等这一切都办完后，去村子西南处通往瘴气林入口的道路，<br>途中经过一个岔路口时往西面的 <strong>愚人居的井中</strong> 有罗汉笑。<br>回到岔路口继续向南走，要先往瘴气林中闯一下，然后去北面的 <strong>猎户家</strong> 中询问进入瘴气林的办法，猎户家旁有烤鹿肉。<br>然后就去石梦城，在忘忧村东面，沿着路放心走，你不会迷路的！</p>\n<hr>\n<h3 id=\"石梦城\"><a href=\"#石梦城\" class=\"headerlink\" title=\"石梦城\"></a>石梦城</h3><p>在此顺便告诉你一个赚钱的绝招:一般物品在当铺卖时是以购买时的半价出售的,但有一种物品购买时价格是222元,而在当铺出售时是购买价格的两倍,这种物品就是—— <strong>灵芝草</strong>。<br>还要提醒各位的是：身法在此游戏中起着重要作用，在某些关键时刻更是决定着生死，所以，一些降低身法的装备尽量别使用。<br>到达石梦城后先买些装备（有些装备只有符合特定的属性的人物才能装备），<br>然后在有两个人把守的 <strong>李府的北面的房间</strong> 中你会找到 <strong>鲁斧</strong>，你将答应帮他夺回芦藤铠甲，然后闯进李府，<br>在 <strong>李府西南角的房间</strong> 中有子光金符、寒冰蛙、清凉油和袖里剑。<br>在 <strong>客厅</strong> 桌上有千里飘，把李虎搞定后将会得到芦藤雄甲、芦藤雌甲和金色钥匙（如果在忘忧村没有找到蔡婆婆，那么将不会得到金色钥匙）。<br>在 <strong>李府客厅的东面的房间</strong> 中捆着蔡婆婆的女儿，要使用金色钥匙才能进入。<br>在 <strong>下人房</strong> 中放走老王,然后去 <strong>老王家</strong> 中找老王,他会告诉你李府有密道 ,密道入口就在关蔡婆婆女儿房间的后面。<br>（<strong>新伏魔记S版新增剧情：在 李虎庄园 必须找到隔壁老王，放走他。这样会有许愿神。复活袁小草。做善事。一报回一报。</strong>）<br>在 <strong>李府宝库</strong> 有八卦镜、飘仙果、千年朱果、枸杞仙果、袖里剑、缚龙索、金钱1000、魔王甲<br>在 <strong>石梦城东南角的塔砖</strong> 中有穿心镖。（为了节省时间，此后一些不重要的物品将不再一一列出所在地点）<br>穿上芦藤铠甲回到忘忧村后，先去蔡婆婆家 找到她，她会送你“七星灯”。<br>进入毒瘴林，来到蛇窟山洞里，<br>在 <strong>蛇窟山洞一</strong> 有召雷符、唤风符、宇冰符、狱火符、囤土符、定魂旗、七杳草根、回神丹、金钱200、霸王花<br>在 <strong>蛇窟隐洞</strong> 有石矶珠、定神珠、鹿皮靴、紫竹符、灵芝草、菊黄散<br>在 <strong>蛇窟山洞二</strong> 有青阴君、软较披风、佛天园、寒冰蛙。<br>在 <strong>蛇窟山洞三</strong> 有两面针、天玉菩提、金毛虫、佛天园<br>找到蛇妖，只需投掷出几把砍刀就能轻松战胜它。然后它将你封在洞中后，在一个通道的尽头你会发现出口进入蛇窟宝洞。<br>在 <strong>蛇窟宝洞</strong> 有青蛇卵、红蝎卵、蜘蛛卵、金蝥、八仙石、渺影衣。<br>拿完宝贝然后出来，蛇妖杀死了慕容小梅的父亲，再次战斗，在你将它彻底击毙之后，上山复命吧。<br>到此为止，游戏的第一部分告一段落。</p>\n<p>未完待续…</p>\n","excerpt":"","more":"<p>整理过去的笔记，发现这么一篇攻略，回想起小时候躲在被窝里熬夜打伏魔记的经历，真是满满的怀念啊～</p>\n<h3 id=\"新版新增内容：\"><a href=\"#新版新增内容：\" class=\"headerlink\" title=\"新版新增内容：\"></a>新版新增内容：</h3><p>游戏加入一些新装备和新剧情。<br>现在发放游戏攻略。以下的任务必须都要做，才能进入仙界，不然游戏就崩溃了。<br>一、在 <strong>李虎庄园</strong> 必须找到 <strong>隔壁老王</strong>，放走他。这样会有许愿神。复活袁小草。做善事。一报回一报。<br>二、<strong>蔡婆婆</strong> 任务必须接，第二次下山，接蔡婆婆第二个任务，帮忙送信给万锁开。这样加上 <strong>老孟</strong> 的信，一共两封信，能得到五把 <strong>万能钥匙</strong>，分别对应 <strong>三张卡片</strong>，一个 <strong>紫瞳魔灯</strong>，一个 <strong>尺骨双剑</strong>。修改了愚人居的设定，三个卡片都能得到相对应的东西。不会被骗了。建议学习百虫欺天，潮海衣可以爆出三件。不用换。<br>三、<strong>建业城</strong> 的 <strong>富贵珠</strong> 任务一定要打，并且一定要留一颗不能当，这样打完 <strong>齐天大圣</strong> 孙悟空后给他富贵珠，他会传你500年功力，500点防御和攻击。<br>四、<strong>南北村</strong> 打完白虎要联系 <strong>村民</strong>，然后找 <strong>周处</strong> 要 <strong>仙丹</strong>。和 <strong>村民</strong> 对话把仙丹给出去。这样才有 <strong>太上老君</strong>。<br>五、打 <strong>天道</strong> 时必须用妙手空空在他身上偷回他拿走的 <strong>霸王钟</strong>，一共两个，一个马上给 <strong>袁萍址</strong> 带上，另一个留包裹里。<br>六、从 <strong>愚人居</strong> 出来，去建业城，把包里的霸王钟带身上，才能进入 <strong>建业客栈二楼</strong>，然后从二楼密道 <strong>到钟山</strong>， 把 <strong>霸王钟</strong> 卸下来，进入钟山大厅，<strong>师叔</strong> 会出现，把霸王钟还给钟山，他会传你张道陵师祖的 <strong>九龙道剑</strong>。伏魔第一神器！<br>七、之后去 <strong>忘忧村</strong> 找 <strong>蔡婆婆</strong>，她会告诉你 <strong>岔道口</strong> 修路的地方修了个亭子，让你去看看。哪里就是 <strong>仙界</strong>。<br>仙界里左下角有个 <strong>钱壳</strong>。在里面可以无限的拿钱。右上角有天道，但是他不动、也看不见，你得走到边上走不动了就点确定，他会传给小梅霸王钟咒。</p>\n<hr>\n<h3 id=\"三清山\"><a href=\"#三清山\" class=\"headerlink\" title=\"三清山\"></a>三清山</h3><p>最初的一段时光是最难熬的了,刚开始没找师父前在百草地 西北角有把绝世好剑——钨龙剑!在 百草地 你还能找到金蝥、珠仙草（增加人物属性最大值的药品发现后马上吃掉）。<br>来到百草地东面的三清宫内，进入无机阁 中找到师父。<br>在 <strong>无机阁</strong> 北面的墙上有勾魂散、七步蛇毒和六脏蚀毒粉。<br>在 <strong>炼丹房</strong> 内北面墙上的一排葫芦中可以找到两颗无忧仙丹，<br>在 <strong>两间普通弟子居</strong> 中有天山盐、金鍪和一些钱币。<br>在 <strong>厨房</strong> 中有玉蓝草、茶叶蛋和天山盐，<br>在 <strong>清风居（你自己的房间）</strong> 中有发带、草鞋和一些钱币，其中的一张床可以休息（补满生命）。<br>在 <strong>大师兄居</strong> 有些钱币和白衣，<br>在 <strong>师父居</strong> 有降魔符、回神丹和定心符。<br>以上是三清宫中可以找到的所有物品了。宫中有间药房,可以从柜台处买些青阴君带着。<br>伏魔洞在百草地的西面，途中有座三清坟场，别在那儿耽误时间，直接去伏魔洞。<br>要想拿到伏魔剑，先要打倒8个分布在8个灯洞中的护灯神兽，练成“降魔符法”后就能轻易地将其搞定。暗器和药品等到打护剑兽时再用，不然提前用完后打护剑兽会很困难的。<br>在 <strong>灯洞一</strong> 有金钱<br>在 <strong>灯洞二</strong> 有铁剑、平安符、铁剑、平安符<br>在 <strong>灯洞三</strong> 有梅花镖、唤风符、石矶珠<br>在 <strong>灯洞五</strong> 有梅花镖<br>在 <strong>灯洞六</strong> 有青蛇卵、召雷符、毒铁菱、平安符<br>在 <strong>灯洞七</strong> 有宇冰符<br>建议等到练成剑气术才能去搞护剑兽。</p>\n<hr>\n<h3 id=\"忘忧村\"><a href=\"#忘忧村\" class=\"headerlink\" title=\"忘忧村\"></a>忘忧村</h3><p>下山的途中经过摩天顶 ，去西面的 <strong>观星亭</strong> 拿 <strong>督化笛</strong>。<br>在经过一些错综复杂的歇息台子时可以到处找些物品。<br>清单如下：青铜铠、长剑、双手剑、步护腕、花布鞋、彩带、八仙石、飞蝗石、玉蓝草……<br><img src=\"/images/resource.jpg\" alt=\"\"><br>三清山入口出西面的草地上有玉蓝草和七杳草根。<br>来到忘忧村的途中有个向北的岔路口，一东一西的树上有青仙果和霸王花。<br>进了忘忧村后，<br>在 <strong>村子东南角的井</strong> 旁有定心符，在 <strong>杂货店西面</strong> 有茶叶蛋。<br>在 <strong>村子东北角的房</strong> 内与主人打个招呼后在他屋内找到披风。<br>在 <strong>杂货店下面的房子</strong> 中与主人说一下话后在屋内找到香袋。<br>在 <strong>村子西北角蔡婆婆的房子</strong> 中与 <strong>蔡婆婆</strong> 说话，她会让你救她女儿，一定要按照上述顺序才能进入蔡婆婆的房间，房间中还有一枚战狂石。并且不能忘了救她的女儿，救出她女儿后会得到一件宝物！<br>在 <strong>村子南边的村长家</strong> 中找到村长，带上 <strong>慕容小梅</strong>，把一些女孩用的装备都给她，在村长家中可以找到小梅穿的丝衣。<br>在村子中 <strong>武器店的东面的房间</strong> 中找到 <strong>老孟</strong>，帮她送情书。<br>在 <strong>武器店</strong> 中有袖里剑，除了 <strong>砍刀</strong> 其余不需要别的，因为遇上厉害的敌人时投掷砍刀可以伤敌hp-1034，而且价格适宜。<br>等这一切都办完后，去村子西南处通往瘴气林入口的道路，<br>途中经过一个岔路口时往西面的 <strong>愚人居的井中</strong> 有罗汉笑。<br>回到岔路口继续向南走，要先往瘴气林中闯一下，然后去北面的 <strong>猎户家</strong> 中询问进入瘴气林的办法，猎户家旁有烤鹿肉。<br>然后就去石梦城，在忘忧村东面，沿着路放心走，你不会迷路的！</p>\n<hr>\n<h3 id=\"石梦城\"><a href=\"#石梦城\" class=\"headerlink\" title=\"石梦城\"></a>石梦城</h3><p>在此顺便告诉你一个赚钱的绝招:一般物品在当铺卖时是以购买时的半价出售的,但有一种物品购买时价格是222元,而在当铺出售时是购买价格的两倍,这种物品就是—— <strong>灵芝草</strong>。<br>还要提醒各位的是：身法在此游戏中起着重要作用，在某些关键时刻更是决定着生死，所以，一些降低身法的装备尽量别使用。<br>到达石梦城后先买些装备（有些装备只有符合特定的属性的人物才能装备），<br>然后在有两个人把守的 <strong>李府的北面的房间</strong> 中你会找到 <strong>鲁斧</strong>，你将答应帮他夺回芦藤铠甲，然后闯进李府，<br>在 <strong>李府西南角的房间</strong> 中有子光金符、寒冰蛙、清凉油和袖里剑。<br>在 <strong>客厅</strong> 桌上有千里飘，把李虎搞定后将会得到芦藤雄甲、芦藤雌甲和金色钥匙（如果在忘忧村没有找到蔡婆婆，那么将不会得到金色钥匙）。<br>在 <strong>李府客厅的东面的房间</strong> 中捆着蔡婆婆的女儿，要使用金色钥匙才能进入。<br>在 <strong>下人房</strong> 中放走老王,然后去 <strong>老王家</strong> 中找老王,他会告诉你李府有密道 ,密道入口就在关蔡婆婆女儿房间的后面。<br>（<strong>新伏魔记S版新增剧情：在 李虎庄园 必须找到隔壁老王，放走他。这样会有许愿神。复活袁小草。做善事。一报回一报。</strong>）<br>在 <strong>李府宝库</strong> 有八卦镜、飘仙果、千年朱果、枸杞仙果、袖里剑、缚龙索、金钱1000、魔王甲<br>在 <strong>石梦城东南角的塔砖</strong> 中有穿心镖。（为了节省时间，此后一些不重要的物品将不再一一列出所在地点）<br>穿上芦藤铠甲回到忘忧村后，先去蔡婆婆家 找到她，她会送你“七星灯”。<br>进入毒瘴林，来到蛇窟山洞里，<br>在 <strong>蛇窟山洞一</strong> 有召雷符、唤风符、宇冰符、狱火符、囤土符、定魂旗、七杳草根、回神丹、金钱200、霸王花<br>在 <strong>蛇窟隐洞</strong> 有石矶珠、定神珠、鹿皮靴、紫竹符、灵芝草、菊黄散<br>在 <strong>蛇窟山洞二</strong> 有青阴君、软较披风、佛天园、寒冰蛙。<br>在 <strong>蛇窟山洞三</strong> 有两面针、天玉菩提、金毛虫、佛天园<br>找到蛇妖，只需投掷出几把砍刀就能轻松战胜它。然后它将你封在洞中后，在一个通道的尽头你会发现出口进入蛇窟宝洞。<br>在 <strong>蛇窟宝洞</strong> 有青蛇卵、红蝎卵、蜘蛛卵、金蝥、八仙石、渺影衣。<br>拿完宝贝然后出来，蛇妖杀死了慕容小梅的父亲，再次战斗，在你将它彻底击毙之后，上山复命吧。<br>到此为止，游戏的第一部分告一段落。</p>\n<p>未完待续…</p>\n"},{"title":"使用Hexo搭建Github个人博客","date":"2017-03-24T13:25:13.000Z","_content":"网上关于hexo搭建博客的文章已经有很多，这里只做为个人博客的试笔文章，记录下hexo博客搭建的过程和心得。\n\n### Hexo\n\n> Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n### 搭建准备\n\n*   Node.js\n*   Git & Github\n\nNode.js安装方式很多，见 [如何安装Node.js](../如何安装Nodejs/) 文章\nGit 安装方法，见 [如何安装Git](../如何安装Git/) 文章\n\nnode.js 和 git 都安装完成后即可开始搭建hexo个人博客了。\n\n### 开始搭建\n\n#### 安装 hexo\n\n```bash\n$ npm i -g hexo-cli\n```\n> Mac 用户\n> 您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -> Download -> Command Line Tools -> Install 安装命令行工具。\n\n#### 初始化 blog\n\n```bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n#### 写文章\n\n你可以执行下列命令来创建一篇新文章。\n\n```bash\n$ hexo new [layout] <title>\n```\n> 可以在命令中指定文章的布局（layout），默认为 post，可以通过修改_config.yml 中的 default_layout 参数来指定默认布局。\n\n#### 服务器\n\n使用 hexo-server 启动本地服务查看博客\n\n> Hexo 3.0 把服务器独立成了个别模块，必须先安装 hexo-server 才能使用。\n\n```bash\n$ npm i hexo-server --save\n```\n\n**启动服务**\n\n```bash\n$ hexo server\n```\n\n**实时刷新**\n\n安装 hexo-browsersync，监听文档变化，实时刷新页面\n\n```bash\n$ npm i hexo-browsersync --save\n$ hexo server\n```\n\n#### 生成器\n\n使用 hexo generate 生成静态文件\n\n```bash\n$ hexo generate\n```\n\n**监听文件变动**\n\n```bash\n$ hexo generate --watch\n```\n\n#### 部署\n\n```bash\n$ hexo deploy\n```\n\n### 部署到Github上\n\n#### 新建仓库\n\ngithub 有个功能叫 Github Pages，可以使用当前账号的名称作为二级域名建立一个自己的网站，前提是这个仓库的名字是 your_name.github.io 这种格式，your_name是你的github账户名。\n\n#### 部署到github上\n\n安装 hexo-deployer-git\n\n```bash\n$ npm i hexo-deployer-git --save\n```\n\n修改配置项：\n\n```bash\n_config.yml\n...\n# hexo-deployer-git config\ndeploy:\n  type: git\n  repo: <repository url> #库（Repository）地址\n  branch: [branch] #分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。\n  message: [message] #自定义提交信息 (默认为 Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }})\n```\n\n运行\n\n```bash\n$ hexo deploy\n```\n\n即可将生成的静态文件部署到github上。\n\n访问自己的 your_name.github.io 即可访问自己的博客了。\n","source":"_posts/使用Hexo搭建Github个人博客.md","raw":"---\ntitle: 使用Hexo搭建Github个人博客\ndate: 2017-03-24 21:25:13\ntags: hexo\n---\n网上关于hexo搭建博客的文章已经有很多，这里只做为个人博客的试笔文章，记录下hexo博客搭建的过程和心得。\n\n### Hexo\n\n> Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n### 搭建准备\n\n*   Node.js\n*   Git & Github\n\nNode.js安装方式很多，见 [如何安装Node.js](../如何安装Nodejs/) 文章\nGit 安装方法，见 [如何安装Git](../如何安装Git/) 文章\n\nnode.js 和 git 都安装完成后即可开始搭建hexo个人博客了。\n\n### 开始搭建\n\n#### 安装 hexo\n\n```bash\n$ npm i -g hexo-cli\n```\n> Mac 用户\n> 您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -> Download -> Command Line Tools -> Install 安装命令行工具。\n\n#### 初始化 blog\n\n```bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n#### 写文章\n\n你可以执行下列命令来创建一篇新文章。\n\n```bash\n$ hexo new [layout] <title>\n```\n> 可以在命令中指定文章的布局（layout），默认为 post，可以通过修改_config.yml 中的 default_layout 参数来指定默认布局。\n\n#### 服务器\n\n使用 hexo-server 启动本地服务查看博客\n\n> Hexo 3.0 把服务器独立成了个别模块，必须先安装 hexo-server 才能使用。\n\n```bash\n$ npm i hexo-server --save\n```\n\n**启动服务**\n\n```bash\n$ hexo server\n```\n\n**实时刷新**\n\n安装 hexo-browsersync，监听文档变化，实时刷新页面\n\n```bash\n$ npm i hexo-browsersync --save\n$ hexo server\n```\n\n#### 生成器\n\n使用 hexo generate 生成静态文件\n\n```bash\n$ hexo generate\n```\n\n**监听文件变动**\n\n```bash\n$ hexo generate --watch\n```\n\n#### 部署\n\n```bash\n$ hexo deploy\n```\n\n### 部署到Github上\n\n#### 新建仓库\n\ngithub 有个功能叫 Github Pages，可以使用当前账号的名称作为二级域名建立一个自己的网站，前提是这个仓库的名字是 your_name.github.io 这种格式，your_name是你的github账户名。\n\n#### 部署到github上\n\n安装 hexo-deployer-git\n\n```bash\n$ npm i hexo-deployer-git --save\n```\n\n修改配置项：\n\n```bash\n_config.yml\n...\n# hexo-deployer-git config\ndeploy:\n  type: git\n  repo: <repository url> #库（Repository）地址\n  branch: [branch] #分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。\n  message: [message] #自定义提交信息 (默认为 Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }})\n```\n\n运行\n\n```bash\n$ hexo deploy\n```\n\n即可将生成的静态文件部署到github上。\n\n访问自己的 your_name.github.io 即可访问自己的博客了。\n","slug":"使用Hexo搭建Github个人博客","published":1,"updated":"2017-04-01T15:17:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj152ox4f0002da39ik6aruwm","content":"<p>网上关于hexo搭建博客的文章已经有很多，这里只做为个人博客的试笔文章，记录下hexo博客搭建的过程和心得。</p>\n<h3 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h3><blockquote>\n<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n</blockquote>\n<h3 id=\"搭建准备\"><a href=\"#搭建准备\" class=\"headerlink\" title=\"搭建准备\"></a>搭建准备</h3><ul>\n<li>Node.js</li>\n<li>Git &amp; Github</li>\n</ul>\n<p>Node.js安装方式很多，见 <a href=\"../如何安装Nodejs/\">如何安装Node.js</a> 文章<br>Git 安装方法，见 <a href=\"../如何安装Git/\">如何安装Git</a> 文章</p>\n<p>node.js 和 git 都安装完成后即可开始搭建hexo个人博客了。</p>\n<h3 id=\"开始搭建\"><a href=\"#开始搭建\" class=\"headerlink\" title=\"开始搭建\"></a>开始搭建</h3><h4 id=\"安装-hexo\"><a href=\"#安装-hexo\" class=\"headerlink\" title=\"安装 hexo\"></a>安装 hexo</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i -g hexo-cli</div></pre></td></tr></table></figure>\n<blockquote>\n<p>Mac 用户<br>您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install 安装命令行工具。</p>\n</blockquote>\n<h4 id=\"初始化-blog\"><a href=\"#初始化-blog\" class=\"headerlink\" title=\"初始化 blog\"></a>初始化 blog</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init &lt;folder&gt;</div><div class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n<h4 id=\"写文章\"><a href=\"#写文章\" class=\"headerlink\" title=\"写文章\"></a>写文章</h4><p>你可以执行下列命令来创建一篇新文章。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>可以在命令中指定文章的布局（layout），默认为 post，可以通过修改_config.yml 中的 default_layout 参数来指定默认布局。</p>\n</blockquote>\n<h4 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h4><p>使用 hexo-server 启动本地服务查看博客</p>\n<blockquote>\n<p>Hexo 3.0 把服务器独立成了个别模块，必须先安装 hexo-server 才能使用。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i hexo-server --save</div></pre></td></tr></table></figure>\n<p><strong>启动服务</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p><strong>实时刷新</strong></p>\n<p>安装 hexo-browsersync，监听文档变化，实时刷新页面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i hexo-browsersync --save</div><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<h4 id=\"生成器\"><a href=\"#生成器\" class=\"headerlink\" title=\"生成器\"></a>生成器</h4><p>使用 hexo generate 生成静态文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p><strong>监听文件变动</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate --watch</div></pre></td></tr></table></figure>\n<h4 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<h3 id=\"部署到Github上\"><a href=\"#部署到Github上\" class=\"headerlink\" title=\"部署到Github上\"></a>部署到Github上</h3><h4 id=\"新建仓库\"><a href=\"#新建仓库\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h4><p>github 有个功能叫 Github Pages，可以使用当前账号的名称作为二级域名建立一个自己的网站，前提是这个仓库的名字是 your_name.github.io 这种格式，your_name是你的github账户名。</p>\n<h4 id=\"部署到github上\"><a href=\"#部署到github上\" class=\"headerlink\" title=\"部署到github上\"></a>部署到github上</h4><p>安装 hexo-deployer-git</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i hexo-deployer-git --save</div></pre></td></tr></table></figure>\n<p>修改配置项：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">_config.yml</div><div class=\"line\">...</div><div class=\"line\"><span class=\"comment\"># hexo-deployer-git config</span></div><div class=\"line\">deploy:</div><div class=\"line\">  <span class=\"built_in\">type</span>: git</div><div class=\"line\">  repo: &lt;repository url&gt; <span class=\"comment\">#库（Repository）地址</span></div><div class=\"line\">  branch: [branch] <span class=\"comment\">#分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。</span></div><div class=\"line\">  message: [message] <span class=\"comment\">#自定义提交信息 (默认为 Site updated: &#123;&#123; now('YYYY-MM-DD HH:mm:ss') &#125;&#125;)</span></div></pre></td></tr></table></figure>\n<p>运行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>即可将生成的静态文件部署到github上。</p>\n<p>访问自己的 your_name.github.io 即可访问自己的博客了。</p>\n","excerpt":"","more":"<p>网上关于hexo搭建博客的文章已经有很多，这里只做为个人博客的试笔文章，记录下hexo博客搭建的过程和心得。</p>\n<h3 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h3><blockquote>\n<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n</blockquote>\n<h3 id=\"搭建准备\"><a href=\"#搭建准备\" class=\"headerlink\" title=\"搭建准备\"></a>搭建准备</h3><ul>\n<li>Node.js</li>\n<li>Git &amp; Github</li>\n</ul>\n<p>Node.js安装方式很多，见 <a href=\"../如何安装Nodejs/\">如何安装Node.js</a> 文章<br>Git 安装方法，见 <a href=\"../如何安装Git/\">如何安装Git</a> 文章</p>\n<p>node.js 和 git 都安装完成后即可开始搭建hexo个人博客了。</p>\n<h3 id=\"开始搭建\"><a href=\"#开始搭建\" class=\"headerlink\" title=\"开始搭建\"></a>开始搭建</h3><h4 id=\"安装-hexo\"><a href=\"#安装-hexo\" class=\"headerlink\" title=\"安装 hexo\"></a>安装 hexo</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i -g hexo-cli</div></pre></td></tr></table></figure>\n<blockquote>\n<p>Mac 用户<br>您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install 安装命令行工具。</p>\n</blockquote>\n<h4 id=\"初始化-blog\"><a href=\"#初始化-blog\" class=\"headerlink\" title=\"初始化 blog\"></a>初始化 blog</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init &lt;folder&gt;</div><div class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n<h4 id=\"写文章\"><a href=\"#写文章\" class=\"headerlink\" title=\"写文章\"></a>写文章</h4><p>你可以执行下列命令来创建一篇新文章。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>可以在命令中指定文章的布局（layout），默认为 post，可以通过修改_config.yml 中的 default_layout 参数来指定默认布局。</p>\n</blockquote>\n<h4 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h4><p>使用 hexo-server 启动本地服务查看博客</p>\n<blockquote>\n<p>Hexo 3.0 把服务器独立成了个别模块，必须先安装 hexo-server 才能使用。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i hexo-server --save</div></pre></td></tr></table></figure>\n<p><strong>启动服务</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p><strong>实时刷新</strong></p>\n<p>安装 hexo-browsersync，监听文档变化，实时刷新页面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i hexo-browsersync --save</div><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<h4 id=\"生成器\"><a href=\"#生成器\" class=\"headerlink\" title=\"生成器\"></a>生成器</h4><p>使用 hexo generate 生成静态文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p><strong>监听文件变动</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate --watch</div></pre></td></tr></table></figure>\n<h4 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<h3 id=\"部署到Github上\"><a href=\"#部署到Github上\" class=\"headerlink\" title=\"部署到Github上\"></a>部署到Github上</h3><h4 id=\"新建仓库\"><a href=\"#新建仓库\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h4><p>github 有个功能叫 Github Pages，可以使用当前账号的名称作为二级域名建立一个自己的网站，前提是这个仓库的名字是 your_name.github.io 这种格式，your_name是你的github账户名。</p>\n<h4 id=\"部署到github上\"><a href=\"#部署到github上\" class=\"headerlink\" title=\"部署到github上\"></a>部署到github上</h4><p>安装 hexo-deployer-git</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i hexo-deployer-git --save</div></pre></td></tr></table></figure>\n<p>修改配置项：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">_config.yml</div><div class=\"line\">...</div><div class=\"line\"><span class=\"comment\"># hexo-deployer-git config</span></div><div class=\"line\">deploy:</div><div class=\"line\">  <span class=\"built_in\">type</span>: git</div><div class=\"line\">  repo: &lt;repository url&gt; <span class=\"comment\">#库（Repository）地址</span></div><div class=\"line\">  branch: [branch] <span class=\"comment\">#分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。</span></div><div class=\"line\">  message: [message] <span class=\"comment\">#自定义提交信息 (默认为 Site updated: &#123;&#123; now('YYYY-MM-DD HH:mm:ss') &#125;&#125;)</span></div></pre></td></tr></table></figure>\n<p>运行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>即可将生成的静态文件部署到github上。</p>\n<p>访问自己的 your_name.github.io 即可访问自己的博客了。</p>\n"},{"title":"如何安装Git","date":"2017-03-24T15:11:55.000Z","_content":"\n### Windows\n\n下载安装 [git](https://git-scm.com/downloads)\n\n### Linxu\n\n#### Debian/Ubuntu\n\n12.04 下\n\nUbuntu12.04中默认没有安装Git。需要自行安装\n\n```bash\n$ sudo add-apt-repository ppa:git-core/ppa\n$ sudo apt-get update\n$ sudo apt-get install git\n```\n\n12.04 以上\n\n```bash\n$ sudo apt-get install git\n```\n\n#### Centos/RedHat\n\n```bash\n$ sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\n$ sudo yum -y install git-core\n```\n\n### Mac\n\nmac 下自带 git，也可以从官网下载安装 [git](https://git-scm.com/downloads)\n","source":"_posts/如何安装Git.md","raw":"---\ntitle: 如何安装Git\ndate: 2017-03-24 23:11:55\ntags: git\n---\n\n### Windows\n\n下载安装 [git](https://git-scm.com/downloads)\n\n### Linxu\n\n#### Debian/Ubuntu\n\n12.04 下\n\nUbuntu12.04中默认没有安装Git。需要自行安装\n\n```bash\n$ sudo add-apt-repository ppa:git-core/ppa\n$ sudo apt-get update\n$ sudo apt-get install git\n```\n\n12.04 以上\n\n```bash\n$ sudo apt-get install git\n```\n\n#### Centos/RedHat\n\n```bash\n$ sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\n$ sudo yum -y install git-core\n```\n\n### Mac\n\nmac 下自带 git，也可以从官网下载安装 [git](https://git-scm.com/downloads)\n","slug":"如何安装Git","published":1,"updated":"2017-04-01T15:17:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj152ox4k0004da39xtlg270k","content":"<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p>下载安装 <a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"external\">git</a></p>\n<h3 id=\"Linxu\"><a href=\"#Linxu\" class=\"headerlink\" title=\"Linxu\"></a>Linxu</h3><h4 id=\"Debian-Ubuntu\"><a href=\"#Debian-Ubuntu\" class=\"headerlink\" title=\"Debian/Ubuntu\"></a>Debian/Ubuntu</h4><p>12.04 下</p>\n<p>Ubuntu12.04中默认没有安装Git。需要自行安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo add-apt-repository ppa:git-core/ppa</div><div class=\"line\">$ sudo apt-get update</div><div class=\"line\">$ sudo apt-get install git</div></pre></td></tr></table></figure>\n<p>12.04 以上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install git</div></pre></td></tr></table></figure>\n<h4 id=\"Centos-RedHat\"><a href=\"#Centos-RedHat\" class=\"headerlink\" title=\"Centos/RedHat\"></a>Centos/RedHat</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</div><div class=\"line\">$ sudo yum -y install git-core</div></pre></td></tr></table></figure>\n<h3 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h3><p>mac 下自带 git，也可以从官网下载安装 <a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"external\">git</a></p>\n","excerpt":"","more":"<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p>下载安装 <a href=\"https://git-scm.com/downloads\">git</a></p>\n<h3 id=\"Linxu\"><a href=\"#Linxu\" class=\"headerlink\" title=\"Linxu\"></a>Linxu</h3><h4 id=\"Debian-Ubuntu\"><a href=\"#Debian-Ubuntu\" class=\"headerlink\" title=\"Debian/Ubuntu\"></a>Debian/Ubuntu</h4><p>12.04 下</p>\n<p>Ubuntu12.04中默认没有安装Git。需要自行安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo add-apt-repository ppa:git-core/ppa</div><div class=\"line\">$ sudo apt-get update</div><div class=\"line\">$ sudo apt-get install git</div></pre></td></tr></table></figure>\n<p>12.04 以上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install git</div></pre></td></tr></table></figure>\n<h4 id=\"Centos-RedHat\"><a href=\"#Centos-RedHat\" class=\"headerlink\" title=\"Centos/RedHat\"></a>Centos/RedHat</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</div><div class=\"line\">$ sudo yum -y install git-core</div></pre></td></tr></table></figure>\n<h3 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h3><p>mac 下自带 git，也可以从官网下载安装 <a href=\"https://git-scm.com/downloads\">git</a></p>\n"},{"title":"多分支管理并部署hexo源码及静态资源文件","date":"2017-03-28T14:47:06.000Z","_content":"#### 背景\n\n将hexo blog部署到github上可以通过 hexo-deploy-git插件完成，它在_config.xml中配置git仓库地址即可。\n但是这种部署方式，提交的github上的代码仅仅是生成的静态文件，无法对hexo的源码进行管理，让我觉得不方便在多个电脑间同步。\n\n#### 思路\n\n在github上建立两个分支，一个source分支，一个master分支，master分支用以发布静态文件，部署博客使用。source分支用以提交hexo的源码，方便我在多台电脑之间进行同步代码，更新文章。\n\n#### 实现\n\n**第一步**\n\n在Github上新建一个仓库，准备用以部署blog的仓库\n\n**第二步**\n\n克隆仓库到本地，添加.gitignore文件，配置：\n\n```bash\nnode_modules/\npublic/\n```\n\n提交上传到master分支\n\n```bash\n$ git add -A\n$ git commit -m 'init master'\n$ git push origin master\n```\n\n新建分支source\n\n```bash\n$ git checkout -b source\n$ git push origin source\n```\n\n此时，远程source和master分支都有一个文件，.gitignore\n\n**第三步**\n\n初始化一个blog\n\n```bash\n$ hexo init blog\n```\n\n将github仓库里的文件(.git/ & .gitignore)拷贝到blog里\n\n注：此时github仓库里仅有一个.gitignore文件，同时还有一个.git的文件夹，这两个都要拷贝到blog目录里\n\n**第四步**\n\n切到source分支，提交源码到source分支上\n\n```bash\n$ git add -A\n$ git commit -m \"init source\"\n$ git push origin source\n```\n\n此时，github仓库远程分支已经拥有了hexo的源码文件\n\n**第五步**\n\n生成静态文件\n\n```bash\n$ hexo g\n```\n\n切到master分支，拷贝public／目录下的静态文件到根目录，提交到远程分支上\n\n```bash\n$ git checkout master\n$ cp -r public/. .\n$ git add -A\n$ git commit -m \"hexo generate\"\n$ git push origin master\n```\n\n注：此时远程master分支上就有了hexo 生成的静态文件，如果启用了Github Pages就可以通过your_name.github.io访问了博客了。\n\n以上便是我通过source分支管理hexo 源码，通过master部署静态文件的方法。\n\n**彩蛋**\n\n为了方便步骤，我在package.json中配置执行脚本，方便快捷部署。配置如下：\n\n```json\n{\n  ...\n  \"scripts\": {\n    \"deploy\": \"rm -rf public && hexo g && git add -A && git commit -m 'hexo generate' && git push origin source && git checkout master && cp -r public/. . && git add -A && git commit -m 'deploy master' && git push origin master && git checkout source\"\n  },\n  ...\n}\n```\n\n使用方法，在目录下运行：\n\n```bash\n$ npm run deploy\n```\n","source":"_posts/多分支管理并部署hexo源码及静态资源文件.md","raw":"---\ntitle: 多分支管理并部署hexo源码及静态资源文件\ndate: 2017-03-28 22:47:06\ntags: hexo\n---\n#### 背景\n\n将hexo blog部署到github上可以通过 hexo-deploy-git插件完成，它在_config.xml中配置git仓库地址即可。\n但是这种部署方式，提交的github上的代码仅仅是生成的静态文件，无法对hexo的源码进行管理，让我觉得不方便在多个电脑间同步。\n\n#### 思路\n\n在github上建立两个分支，一个source分支，一个master分支，master分支用以发布静态文件，部署博客使用。source分支用以提交hexo的源码，方便我在多台电脑之间进行同步代码，更新文章。\n\n#### 实现\n\n**第一步**\n\n在Github上新建一个仓库，准备用以部署blog的仓库\n\n**第二步**\n\n克隆仓库到本地，添加.gitignore文件，配置：\n\n```bash\nnode_modules/\npublic/\n```\n\n提交上传到master分支\n\n```bash\n$ git add -A\n$ git commit -m 'init master'\n$ git push origin master\n```\n\n新建分支source\n\n```bash\n$ git checkout -b source\n$ git push origin source\n```\n\n此时，远程source和master分支都有一个文件，.gitignore\n\n**第三步**\n\n初始化一个blog\n\n```bash\n$ hexo init blog\n```\n\n将github仓库里的文件(.git/ & .gitignore)拷贝到blog里\n\n注：此时github仓库里仅有一个.gitignore文件，同时还有一个.git的文件夹，这两个都要拷贝到blog目录里\n\n**第四步**\n\n切到source分支，提交源码到source分支上\n\n```bash\n$ git add -A\n$ git commit -m \"init source\"\n$ git push origin source\n```\n\n此时，github仓库远程分支已经拥有了hexo的源码文件\n\n**第五步**\n\n生成静态文件\n\n```bash\n$ hexo g\n```\n\n切到master分支，拷贝public／目录下的静态文件到根目录，提交到远程分支上\n\n```bash\n$ git checkout master\n$ cp -r public/. .\n$ git add -A\n$ git commit -m \"hexo generate\"\n$ git push origin master\n```\n\n注：此时远程master分支上就有了hexo 生成的静态文件，如果启用了Github Pages就可以通过your_name.github.io访问了博客了。\n\n以上便是我通过source分支管理hexo 源码，通过master部署静态文件的方法。\n\n**彩蛋**\n\n为了方便步骤，我在package.json中配置执行脚本，方便快捷部署。配置如下：\n\n```json\n{\n  ...\n  \"scripts\": {\n    \"deploy\": \"rm -rf public && hexo g && git add -A && git commit -m 'hexo generate' && git push origin source && git checkout master && cp -r public/. . && git add -A && git commit -m 'deploy master' && git push origin master && git checkout source\"\n  },\n  ...\n}\n```\n\n使用方法，在目录下运行：\n\n```bash\n$ npm run deploy\n```\n","slug":"多分支管理并部署hexo源码及静态资源文件","published":1,"updated":"2017-04-01T15:17:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj152ox4n0005da39szoa0dm4","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>将hexo blog部署到github上可以通过 hexo-deploy-git插件完成，它在_config.xml中配置git仓库地址即可。<br>但是这种部署方式，提交的github上的代码仅仅是生成的静态文件，无法对hexo的源码进行管理，让我觉得不方便在多个电脑间同步。</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>在github上建立两个分支，一个source分支，一个master分支，master分支用以发布静态文件，部署博客使用。source分支用以提交hexo的源码，方便我在多台电脑之间进行同步代码，更新文章。</p>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><p><strong>第一步</strong></p>\n<p>在Github上新建一个仓库，准备用以部署blog的仓库</p>\n<p><strong>第二步</strong></p>\n<p>克隆仓库到本地，添加.gitignore文件，配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">node_modules/</div><div class=\"line\">public/</div></pre></td></tr></table></figure>\n<p>提交上传到master分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git add -A</div><div class=\"line\">$ git commit -m <span class=\"string\">'init master'</span></div><div class=\"line\">$ git push origin master</div></pre></td></tr></table></figure>\n<p>新建分支source</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git checkout -b <span class=\"built_in\">source</span></div><div class=\"line\">$ git push origin <span class=\"built_in\">source</span></div></pre></td></tr></table></figure>\n<p>此时，远程source和master分支都有一个文件，.gitignore</p>\n<p><strong>第三步</strong></p>\n<p>初始化一个blog</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init blog</div></pre></td></tr></table></figure>\n<p>将github仓库里的文件(.git/ &amp; .gitignore)拷贝到blog里</p>\n<p>注：此时github仓库里仅有一个.gitignore文件，同时还有一个.git的文件夹，这两个都要拷贝到blog目录里</p>\n<p><strong>第四步</strong></p>\n<p>切到source分支，提交源码到source分支上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git add -A</div><div class=\"line\">$ git commit -m <span class=\"string\">\"init source\"</span></div><div class=\"line\">$ git push origin <span class=\"built_in\">source</span></div></pre></td></tr></table></figure>\n<p>此时，github仓库远程分支已经拥有了hexo的源码文件</p>\n<p><strong>第五步</strong></p>\n<p>生成静态文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g</div></pre></td></tr></table></figure>\n<p>切到master分支，拷贝public／目录下的静态文件到根目录，提交到远程分支上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git checkout master</div><div class=\"line\">$ cp -r public/. .</div><div class=\"line\">$ git add -A</div><div class=\"line\">$ git commit -m <span class=\"string\">\"hexo generate\"</span></div><div class=\"line\">$ git push origin master</div></pre></td></tr></table></figure>\n<p>注：此时远程master分支上就有了hexo 生成的静态文件，如果启用了Github Pages就可以通过your_name.github.io访问了博客了。</p>\n<p>以上便是我通过source分支管理hexo 源码，通过master部署静态文件的方法。</p>\n<p><strong>彩蛋</strong></p>\n<p>为了方便步骤，我在package.json中配置执行脚本，方便快捷部署。配置如下：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  ...</div><div class=\"line\">  \"scripts\": &#123;</div><div class=\"line\">    \"deploy\": \"rm -rf public &amp;&amp; hexo g &amp;&amp; git add -A &amp;&amp; git commit -m 'hexo generate' &amp;&amp; git push origin source &amp;&amp; git checkout master &amp;&amp; cp -r public/. . &amp;&amp; git add -A &amp;&amp; git commit -m 'deploy master' &amp;&amp; git push origin master &amp;&amp; git checkout source\"</div><div class=\"line\">  &#125;,</div><div class=\"line\">  ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>使用方法，在目录下运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm run deploy</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>将hexo blog部署到github上可以通过 hexo-deploy-git插件完成，它在_config.xml中配置git仓库地址即可。<br>但是这种部署方式，提交的github上的代码仅仅是生成的静态文件，无法对hexo的源码进行管理，让我觉得不方便在多个电脑间同步。</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>在github上建立两个分支，一个source分支，一个master分支，master分支用以发布静态文件，部署博客使用。source分支用以提交hexo的源码，方便我在多台电脑之间进行同步代码，更新文章。</p>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><p><strong>第一步</strong></p>\n<p>在Github上新建一个仓库，准备用以部署blog的仓库</p>\n<p><strong>第二步</strong></p>\n<p>克隆仓库到本地，添加.gitignore文件，配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">node_modules/</div><div class=\"line\">public/</div></pre></td></tr></table></figure>\n<p>提交上传到master分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git add -A</div><div class=\"line\">$ git commit -m <span class=\"string\">'init master'</span></div><div class=\"line\">$ git push origin master</div></pre></td></tr></table></figure>\n<p>新建分支source</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git checkout -b <span class=\"built_in\">source</span></div><div class=\"line\">$ git push origin <span class=\"built_in\">source</span></div></pre></td></tr></table></figure>\n<p>此时，远程source和master分支都有一个文件，.gitignore</p>\n<p><strong>第三步</strong></p>\n<p>初始化一个blog</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init blog</div></pre></td></tr></table></figure>\n<p>将github仓库里的文件(.git/ &amp; .gitignore)拷贝到blog里</p>\n<p>注：此时github仓库里仅有一个.gitignore文件，同时还有一个.git的文件夹，这两个都要拷贝到blog目录里</p>\n<p><strong>第四步</strong></p>\n<p>切到source分支，提交源码到source分支上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git add -A</div><div class=\"line\">$ git commit -m <span class=\"string\">\"init source\"</span></div><div class=\"line\">$ git push origin <span class=\"built_in\">source</span></div></pre></td></tr></table></figure>\n<p>此时，github仓库远程分支已经拥有了hexo的源码文件</p>\n<p><strong>第五步</strong></p>\n<p>生成静态文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g</div></pre></td></tr></table></figure>\n<p>切到master分支，拷贝public／目录下的静态文件到根目录，提交到远程分支上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git checkout master</div><div class=\"line\">$ cp -r public/. .</div><div class=\"line\">$ git add -A</div><div class=\"line\">$ git commit -m <span class=\"string\">\"hexo generate\"</span></div><div class=\"line\">$ git push origin master</div></pre></td></tr></table></figure>\n<p>注：此时远程master分支上就有了hexo 生成的静态文件，如果启用了Github Pages就可以通过your_name.github.io访问了博客了。</p>\n<p>以上便是我通过source分支管理hexo 源码，通过master部署静态文件的方法。</p>\n<p><strong>彩蛋</strong></p>\n<p>为了方便步骤，我在package.json中配置执行脚本，方便快捷部署。配置如下：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  ...</div><div class=\"line\">  \"scripts\": &#123;</div><div class=\"line\">    \"deploy\": \"rm -rf public &amp;&amp; hexo g &amp;&amp; git add -A &amp;&amp; git commit -m 'hexo generate' &amp;&amp; git push origin source &amp;&amp; git checkout master &amp;&amp; cp -r public/. . &amp;&amp; git add -A &amp;&amp; git commit -m 'deploy master' &amp;&amp; git push origin master &amp;&amp; git checkout source\"</div><div class=\"line\">  &#125;,</div><div class=\"line\">  ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>使用方法，在目录下运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm run deploy</div></pre></td></tr></table></figure>\n"},{"title":"如何安装Nodejs","date":"2017-03-24T13:44:38.000Z","_content":"安装Node.js的方式有很多，这里推荐使用 [nvm](https://github.com/creationix/nvm) 版本控制器进行安装。因为可以进行node.js版本管理，方便升级和倒退。\n\n#### 安装 nvm\n\n**下载 nvm**\n\ncurl：\n```bash\n$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\nwget:\n```bash\n$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\nbrew:\n```bash\n$ brew install nvm\n```\n\n完成后 nvm 就安装在了 ~/.nvm 目录，需要为 nvm 配置环境变量，即可在终端使用 nvm 了。\n\n**配置 nvm 环境变量**\n\n```bash\n$ vim ~/.bash_profile\n```\n\n添加如下内容：\n\n```bash\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"\n```\nbrew 配置\n```bash\nexport NUM_DIR=~/.nvm\nsource $(brew --prefix nvm)/nvm.sh\n```\n\n#### nvm 安装 node.js\n\n安装完成后，重启终端并执行下列命令即可安装 Node.js。\n\n```bash\n$ nvm install stable\n```\n","source":"_posts/如何安装Nodejs.md","raw":"---\ntitle: 如何安装Nodejs\ndate: 2017-03-24 21:44:38\ntags: node.js\n---\n安装Node.js的方式有很多，这里推荐使用 [nvm](https://github.com/creationix/nvm) 版本控制器进行安装。因为可以进行node.js版本管理，方便升级和倒退。\n\n#### 安装 nvm\n\n**下载 nvm**\n\ncurl：\n```bash\n$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\nwget:\n```bash\n$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\nbrew:\n```bash\n$ brew install nvm\n```\n\n完成后 nvm 就安装在了 ~/.nvm 目录，需要为 nvm 配置环境变量，即可在终端使用 nvm 了。\n\n**配置 nvm 环境变量**\n\n```bash\n$ vim ~/.bash_profile\n```\n\n添加如下内容：\n\n```bash\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"\n```\nbrew 配置\n```bash\nexport NUM_DIR=~/.nvm\nsource $(brew --prefix nvm)/nvm.sh\n```\n\n#### nvm 安装 node.js\n\n安装完成后，重启终端并执行下列命令即可安装 Node.js。\n\n```bash\n$ nvm install stable\n```\n","slug":"如何安装Nodejs","published":1,"updated":"2017-04-01T15:17:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj152ox5t0006da391khyzvu0","content":"<p>安装Node.js的方式有很多，这里推荐使用 <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"external\">nvm</a> 版本控制器进行安装。因为可以进行node.js版本管理，方便升级和倒退。</p>\n<h4 id=\"安装-nvm\"><a href=\"#安装-nvm\" class=\"headerlink\" title=\"安装 nvm\"></a>安装 nvm</h4><p><strong>下载 nvm</strong></p>\n<p>curl：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure></p>\n<p>wget:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure></p>\n<p>brew:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ brew install nvm</div></pre></td></tr></table></figure></p>\n<p>完成后 nvm 就安装在了 ~/.nvm 目录，需要为 nvm 配置环境变量，即可在终端使用 nvm 了。</p>\n<p><strong>配置 nvm 环境变量</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim ~/.bash_profile</div></pre></td></tr></table></figure>\n<p>添加如下内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">export</span> NVM_DIR=<span class=\"string\">\"<span class=\"variable\">$HOME</span>/.nvm\"</span></div><div class=\"line\">[ <span class=\"_\">-s</span> <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span> ] &amp;&amp; . <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span></div></pre></td></tr></table></figure>\n<p>brew 配置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">export</span> NUM_DIR=~/.nvm</div><div class=\"line\"><span class=\"built_in\">source</span> $(brew --prefix nvm)/nvm.sh</div></pre></td></tr></table></figure></p>\n<h4 id=\"nvm-安装-node-js\"><a href=\"#nvm-安装-node-js\" class=\"headerlink\" title=\"nvm 安装 node.js\"></a>nvm 安装 node.js</h4><p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ nvm install stable</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>安装Node.js的方式有很多，这里推荐使用 <a href=\"https://github.com/creationix/nvm\">nvm</a> 版本控制器进行安装。因为可以进行node.js版本管理，方便升级和倒退。</p>\n<h4 id=\"安装-nvm\"><a href=\"#安装-nvm\" class=\"headerlink\" title=\"安装 nvm\"></a>安装 nvm</h4><p><strong>下载 nvm</strong></p>\n<p>curl：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure></p>\n<p>wget:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure></p>\n<p>brew:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ brew install nvm</div></pre></td></tr></table></figure></p>\n<p>完成后 nvm 就安装在了 ~/.nvm 目录，需要为 nvm 配置环境变量，即可在终端使用 nvm 了。</p>\n<p><strong>配置 nvm 环境变量</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim ~/.bash_profile</div></pre></td></tr></table></figure>\n<p>添加如下内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">export</span> NVM_DIR=<span class=\"string\">\"<span class=\"variable\">$HOME</span>/.nvm\"</span></div><div class=\"line\">[ <span class=\"_\">-s</span> <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span> ] &amp;&amp; . <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span></div></pre></td></tr></table></figure>\n<p>brew 配置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">export</span> NUM_DIR=~/.nvm</div><div class=\"line\"><span class=\"built_in\">source</span> $(brew --prefix nvm)/nvm.sh</div></pre></td></tr></table></figure></p>\n<h4 id=\"nvm-安装-node-js\"><a href=\"#nvm-安装-node-js\" class=\"headerlink\" title=\"nvm 安装 node.js\"></a>nvm 安装 node.js</h4><p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ nvm install stable</div></pre></td></tr></table></figure>\n"},{"title":"绍兴游记：鲁迅故里","date":"2017-03-25T14:01:05.000Z","_content":"阳春三月，樱花正美，本想着和朋友一起来绍兴宛委山的樱花林赏樱，哪知时间尚早，来看的仅仅是含苞待放的樱花骨朵儿～\n\n说到绍兴，第一个想到的就是鲁迅故里，其实绍兴不乏历史文化古迹，鼎鼎有名的书圣王羲之也曾迁居至此，还有贺知章故居、周恩来祖居等。\n\n> 绍兴是浙江的文化中心之一，首批国家历史文化名城之一，是中国历史最悠久的城市之一，是有名的水乡、酒乡、桥乡，绍兴风景秀丽、人才辈出，著名的文化古迹包括兰亭、禹陵、鲁迅故里（包括鲁迅故居、三味书屋、咸亨酒店、百草园等）、蔡元培故居，周恩来祖居，秋瑾故居，马寅初故居，王羲之故居，贺知章故居等名人故居，东湖、沈园、吼山、新昌大佛寺等，古代越王“卧薪尝胆”的故事更是家喻户晓。\n\n**出发**\n\n从杭州出发，坐早上7：27分的K1219，行车一个小时到达绍兴站，虽然从杭州到绍兴有高铁，又快又方便，但是，绍兴北站比较远，不方便游玩的安排，所以选择传统的快车。\n\n**宛委山**\n\n樱花林，出了绍兴站即可在站前广场的公交站-绍兴站坐2路公交车到宛委山，观赏樱花林（门票10元），乘坐着公交车一路观赏绍兴的建筑，沿着城中运河修建的砖瓦平房，给人一种很强的年代感，仿佛都还停留在过去的岁月里，不曾改变。\n\n由于我们来的时节比较早，樱花并未开放，所以这次并没有进林区赏樱，而是又回到了市区，游览鲁迅故里。\n\n**鲁迅故里**\n\n> 鲁迅故里位于中国浙江省绍兴市越城区鲁迅中路，是绍兴市一个著名的历史文化街区，包括鲁迅祖居、绍兴鲁迅故居和三味书屋、百草园、风情园、鲁迅博物馆以及土谷寺和绍兴古玩城。鲁迅于1881年在此出生并成长直至1898年离开。鲁迅故里是一个以全国文物保护单位绍兴鲁迅故居和三味书屋为核心搭配绍兴地方文化的国家5A级旅游景区。\n\n鲁迅故里是免费开放的，只需要凭身份证即可进入。进入鲁迅故里，想着鲁迅的散文《从百草园到三味书屋》仿佛走进了童年的回忆里，看着鲁迅小时候读过的私塾，从百草园（其实就是个大菜园），到三味书屋，还有老先生在三余书屋讲课（三味书屋的其中一家书屋），很有过去的味道。\n\n**王羲之故居**\n\n> 王羲之本是琅琊（今属山东临沂）人，后迁会稽山阴（今属浙江绍兴），晚年隐居剡县金庭。\n\n出了鲁迅故里，在对面一班公交便可到王羲之故居（其实就是一个寺庙），路口有一个牌楼，上面写着“书圣故里”四个大字。进去后看到的是很古色古香的街道，两边的商铺还有些过去的味道，往里走没多远就看到一个寺庙，门边写着“王羲之故居”，真的觉得我们可能逛了假故居。里面有关于王羲之的生平介绍，再往里有一个殿堂，供着大大的人像，乍一看以为是道教大殿，但怎么看都有点像王羲之的像。随便逛了一圈便出来了。在周围的古色古香建筑群里转了转，很适合拍照～\n\n**东湖**\n\n> 绍兴东湖位于中国浙江省绍兴市越城区城东皋埠镇，以山明水秀、岩奇洞幽、亭桥错落、湖洞相连而闻名，被誉为江南的水石大盆景，名列绍兴第二湖，仅次绍兴镜湖新区的镜湖。和杭州西湖、嘉兴南湖并称为浙江三大名湖。是国家4A级旅游景区。\n\n出了王羲之故居，门口可以坐一班公交车直接到东湖，门票50，单趟乌篷船包船（1-3人）85元，可能由于跑了一天比较疲惫，感觉东湖并没有想象中的那么好，第一感觉就是很小，比想象中的小多了，坐乌篷船10分钟左右就到底了，不坐船单趟沿途拍拍照顶多半个小时就能走过来。就一面壁立的石山，东湖沿着山流，说是湖，其实说成是小河感觉更合适，这国家的A级真容易评～\n\n**绍兴的美食**\n\n说到绍兴的美食，可能第一想到的就是黄酒（又称绍酒），我并不喜欢喝酒，所以也没有来品味这绍兴的黄酒，这次来绍兴特地查了一些绍兴的美食，像什么绍兴麻鸭、越鸡、茴香豆等等，本想着好好体验下绍兴美食，奈何没有口福，找不到能吃到这些美食的酒店。午餐就在鲁迅故里门口的丁大兴解决的，点了几样老板推荐的梅菜扣肉饭、三鲜面和醉鸡，感觉跟绍兴美食挂钩的恐怕就醉鸡了（其实就白切鸡配上黄酒），绍兴的臭豆腐可谓是随处可见，走到哪路边都能看见小摊卖臭豆腐。绍兴的臭豆腐和长沙的臭豆腐吃法还不一样，没有香菜和醋，只有甜酱和辣酱，而且是用白豆腐炸出来的，却也很有味道。在鲁迅路里有一家叫“祖传臭豆腐”的小店，价格实惠，味道不错，良心老板，只要五元便可购买一份，其他地方得要十元一份。\n\n**归程**\n\n晚上买的从绍兴站回杭州的特快列车，这次绍兴的一日游，也仅是游览了这么几个景点，相信其他地方应该别有一番风味，唯一感到可惜的是没有吃到地道的绍兴美食，不知道何年才有机会再游一次绍兴了。\n","source":"_posts/绍兴游记：鲁迅故里.md","raw":"---\ntitle: 绍兴游记：鲁迅故里\ndate: 2017-03-25 22:01:05\ntags: 旅游\n---\n阳春三月，樱花正美，本想着和朋友一起来绍兴宛委山的樱花林赏樱，哪知时间尚早，来看的仅仅是含苞待放的樱花骨朵儿～\n\n说到绍兴，第一个想到的就是鲁迅故里，其实绍兴不乏历史文化古迹，鼎鼎有名的书圣王羲之也曾迁居至此，还有贺知章故居、周恩来祖居等。\n\n> 绍兴是浙江的文化中心之一，首批国家历史文化名城之一，是中国历史最悠久的城市之一，是有名的水乡、酒乡、桥乡，绍兴风景秀丽、人才辈出，著名的文化古迹包括兰亭、禹陵、鲁迅故里（包括鲁迅故居、三味书屋、咸亨酒店、百草园等）、蔡元培故居，周恩来祖居，秋瑾故居，马寅初故居，王羲之故居，贺知章故居等名人故居，东湖、沈园、吼山、新昌大佛寺等，古代越王“卧薪尝胆”的故事更是家喻户晓。\n\n**出发**\n\n从杭州出发，坐早上7：27分的K1219，行车一个小时到达绍兴站，虽然从杭州到绍兴有高铁，又快又方便，但是，绍兴北站比较远，不方便游玩的安排，所以选择传统的快车。\n\n**宛委山**\n\n樱花林，出了绍兴站即可在站前广场的公交站-绍兴站坐2路公交车到宛委山，观赏樱花林（门票10元），乘坐着公交车一路观赏绍兴的建筑，沿着城中运河修建的砖瓦平房，给人一种很强的年代感，仿佛都还停留在过去的岁月里，不曾改变。\n\n由于我们来的时节比较早，樱花并未开放，所以这次并没有进林区赏樱，而是又回到了市区，游览鲁迅故里。\n\n**鲁迅故里**\n\n> 鲁迅故里位于中国浙江省绍兴市越城区鲁迅中路，是绍兴市一个著名的历史文化街区，包括鲁迅祖居、绍兴鲁迅故居和三味书屋、百草园、风情园、鲁迅博物馆以及土谷寺和绍兴古玩城。鲁迅于1881年在此出生并成长直至1898年离开。鲁迅故里是一个以全国文物保护单位绍兴鲁迅故居和三味书屋为核心搭配绍兴地方文化的国家5A级旅游景区。\n\n鲁迅故里是免费开放的，只需要凭身份证即可进入。进入鲁迅故里，想着鲁迅的散文《从百草园到三味书屋》仿佛走进了童年的回忆里，看着鲁迅小时候读过的私塾，从百草园（其实就是个大菜园），到三味书屋，还有老先生在三余书屋讲课（三味书屋的其中一家书屋），很有过去的味道。\n\n**王羲之故居**\n\n> 王羲之本是琅琊（今属山东临沂）人，后迁会稽山阴（今属浙江绍兴），晚年隐居剡县金庭。\n\n出了鲁迅故里，在对面一班公交便可到王羲之故居（其实就是一个寺庙），路口有一个牌楼，上面写着“书圣故里”四个大字。进去后看到的是很古色古香的街道，两边的商铺还有些过去的味道，往里走没多远就看到一个寺庙，门边写着“王羲之故居”，真的觉得我们可能逛了假故居。里面有关于王羲之的生平介绍，再往里有一个殿堂，供着大大的人像，乍一看以为是道教大殿，但怎么看都有点像王羲之的像。随便逛了一圈便出来了。在周围的古色古香建筑群里转了转，很适合拍照～\n\n**东湖**\n\n> 绍兴东湖位于中国浙江省绍兴市越城区城东皋埠镇，以山明水秀、岩奇洞幽、亭桥错落、湖洞相连而闻名，被誉为江南的水石大盆景，名列绍兴第二湖，仅次绍兴镜湖新区的镜湖。和杭州西湖、嘉兴南湖并称为浙江三大名湖。是国家4A级旅游景区。\n\n出了王羲之故居，门口可以坐一班公交车直接到东湖，门票50，单趟乌篷船包船（1-3人）85元，可能由于跑了一天比较疲惫，感觉东湖并没有想象中的那么好，第一感觉就是很小，比想象中的小多了，坐乌篷船10分钟左右就到底了，不坐船单趟沿途拍拍照顶多半个小时就能走过来。就一面壁立的石山，东湖沿着山流，说是湖，其实说成是小河感觉更合适，这国家的A级真容易评～\n\n**绍兴的美食**\n\n说到绍兴的美食，可能第一想到的就是黄酒（又称绍酒），我并不喜欢喝酒，所以也没有来品味这绍兴的黄酒，这次来绍兴特地查了一些绍兴的美食，像什么绍兴麻鸭、越鸡、茴香豆等等，本想着好好体验下绍兴美食，奈何没有口福，找不到能吃到这些美食的酒店。午餐就在鲁迅故里门口的丁大兴解决的，点了几样老板推荐的梅菜扣肉饭、三鲜面和醉鸡，感觉跟绍兴美食挂钩的恐怕就醉鸡了（其实就白切鸡配上黄酒），绍兴的臭豆腐可谓是随处可见，走到哪路边都能看见小摊卖臭豆腐。绍兴的臭豆腐和长沙的臭豆腐吃法还不一样，没有香菜和醋，只有甜酱和辣酱，而且是用白豆腐炸出来的，却也很有味道。在鲁迅路里有一家叫“祖传臭豆腐”的小店，价格实惠，味道不错，良心老板，只要五元便可购买一份，其他地方得要十元一份。\n\n**归程**\n\n晚上买的从绍兴站回杭州的特快列车，这次绍兴的一日游，也仅是游览了这么几个景点，相信其他地方应该别有一番风味，唯一感到可惜的是没有吃到地道的绍兴美食，不知道何年才有机会再游一次绍兴了。\n","slug":"绍兴游记：鲁迅故里","published":1,"updated":"2017-04-01T15:17:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj152ox5v0008da39658tq4vn","content":"<p>阳春三月，樱花正美，本想着和朋友一起来绍兴宛委山的樱花林赏樱，哪知时间尚早，来看的仅仅是含苞待放的樱花骨朵儿～</p>\n<p>说到绍兴，第一个想到的就是鲁迅故里，其实绍兴不乏历史文化古迹，鼎鼎有名的书圣王羲之也曾迁居至此，还有贺知章故居、周恩来祖居等。</p>\n<blockquote>\n<p>绍兴是浙江的文化中心之一，首批国家历史文化名城之一，是中国历史最悠久的城市之一，是有名的水乡、酒乡、桥乡，绍兴风景秀丽、人才辈出，著名的文化古迹包括兰亭、禹陵、鲁迅故里（包括鲁迅故居、三味书屋、咸亨酒店、百草园等）、蔡元培故居，周恩来祖居，秋瑾故居，马寅初故居，王羲之故居，贺知章故居等名人故居，东湖、沈园、吼山、新昌大佛寺等，古代越王“卧薪尝胆”的故事更是家喻户晓。</p>\n</blockquote>\n<p><strong>出发</strong></p>\n<p>从杭州出发，坐早上7：27分的K1219，行车一个小时到达绍兴站，虽然从杭州到绍兴有高铁，又快又方便，但是，绍兴北站比较远，不方便游玩的安排，所以选择传统的快车。</p>\n<p><strong>宛委山</strong></p>\n<p>樱花林，出了绍兴站即可在站前广场的公交站-绍兴站坐2路公交车到宛委山，观赏樱花林（门票10元），乘坐着公交车一路观赏绍兴的建筑，沿着城中运河修建的砖瓦平房，给人一种很强的年代感，仿佛都还停留在过去的岁月里，不曾改变。</p>\n<p>由于我们来的时节比较早，樱花并未开放，所以这次并没有进林区赏樱，而是又回到了市区，游览鲁迅故里。</p>\n<p><strong>鲁迅故里</strong></p>\n<blockquote>\n<p>鲁迅故里位于中国浙江省绍兴市越城区鲁迅中路，是绍兴市一个著名的历史文化街区，包括鲁迅祖居、绍兴鲁迅故居和三味书屋、百草园、风情园、鲁迅博物馆以及土谷寺和绍兴古玩城。鲁迅于1881年在此出生并成长直至1898年离开。鲁迅故里是一个以全国文物保护单位绍兴鲁迅故居和三味书屋为核心搭配绍兴地方文化的国家5A级旅游景区。</p>\n</blockquote>\n<p>鲁迅故里是免费开放的，只需要凭身份证即可进入。进入鲁迅故里，想着鲁迅的散文《从百草园到三味书屋》仿佛走进了童年的回忆里，看着鲁迅小时候读过的私塾，从百草园（其实就是个大菜园），到三味书屋，还有老先生在三余书屋讲课（三味书屋的其中一家书屋），很有过去的味道。</p>\n<p><strong>王羲之故居</strong></p>\n<blockquote>\n<p>王羲之本是琅琊（今属山东临沂）人，后迁会稽山阴（今属浙江绍兴），晚年隐居剡县金庭。</p>\n</blockquote>\n<p>出了鲁迅故里，在对面一班公交便可到王羲之故居（其实就是一个寺庙），路口有一个牌楼，上面写着“书圣故里”四个大字。进去后看到的是很古色古香的街道，两边的商铺还有些过去的味道，往里走没多远就看到一个寺庙，门边写着“王羲之故居”，真的觉得我们可能逛了假故居。里面有关于王羲之的生平介绍，再往里有一个殿堂，供着大大的人像，乍一看以为是道教大殿，但怎么看都有点像王羲之的像。随便逛了一圈便出来了。在周围的古色古香建筑群里转了转，很适合拍照～</p>\n<p><strong>东湖</strong></p>\n<blockquote>\n<p>绍兴东湖位于中国浙江省绍兴市越城区城东皋埠镇，以山明水秀、岩奇洞幽、亭桥错落、湖洞相连而闻名，被誉为江南的水石大盆景，名列绍兴第二湖，仅次绍兴镜湖新区的镜湖。和杭州西湖、嘉兴南湖并称为浙江三大名湖。是国家4A级旅游景区。</p>\n</blockquote>\n<p>出了王羲之故居，门口可以坐一班公交车直接到东湖，门票50，单趟乌篷船包船（1-3人）85元，可能由于跑了一天比较疲惫，感觉东湖并没有想象中的那么好，第一感觉就是很小，比想象中的小多了，坐乌篷船10分钟左右就到底了，不坐船单趟沿途拍拍照顶多半个小时就能走过来。就一面壁立的石山，东湖沿着山流，说是湖，其实说成是小河感觉更合适，这国家的A级真容易评～</p>\n<p><strong>绍兴的美食</strong></p>\n<p>说到绍兴的美食，可能第一想到的就是黄酒（又称绍酒），我并不喜欢喝酒，所以也没有来品味这绍兴的黄酒，这次来绍兴特地查了一些绍兴的美食，像什么绍兴麻鸭、越鸡、茴香豆等等，本想着好好体验下绍兴美食，奈何没有口福，找不到能吃到这些美食的酒店。午餐就在鲁迅故里门口的丁大兴解决的，点了几样老板推荐的梅菜扣肉饭、三鲜面和醉鸡，感觉跟绍兴美食挂钩的恐怕就醉鸡了（其实就白切鸡配上黄酒），绍兴的臭豆腐可谓是随处可见，走到哪路边都能看见小摊卖臭豆腐。绍兴的臭豆腐和长沙的臭豆腐吃法还不一样，没有香菜和醋，只有甜酱和辣酱，而且是用白豆腐炸出来的，却也很有味道。在鲁迅路里有一家叫“祖传臭豆腐”的小店，价格实惠，味道不错，良心老板，只要五元便可购买一份，其他地方得要十元一份。</p>\n<p><strong>归程</strong></p>\n<p>晚上买的从绍兴站回杭州的特快列车，这次绍兴的一日游，也仅是游览了这么几个景点，相信其他地方应该别有一番风味，唯一感到可惜的是没有吃到地道的绍兴美食，不知道何年才有机会再游一次绍兴了。</p>\n","excerpt":"","more":"<p>阳春三月，樱花正美，本想着和朋友一起来绍兴宛委山的樱花林赏樱，哪知时间尚早，来看的仅仅是含苞待放的樱花骨朵儿～</p>\n<p>说到绍兴，第一个想到的就是鲁迅故里，其实绍兴不乏历史文化古迹，鼎鼎有名的书圣王羲之也曾迁居至此，还有贺知章故居、周恩来祖居等。</p>\n<blockquote>\n<p>绍兴是浙江的文化中心之一，首批国家历史文化名城之一，是中国历史最悠久的城市之一，是有名的水乡、酒乡、桥乡，绍兴风景秀丽、人才辈出，著名的文化古迹包括兰亭、禹陵、鲁迅故里（包括鲁迅故居、三味书屋、咸亨酒店、百草园等）、蔡元培故居，周恩来祖居，秋瑾故居，马寅初故居，王羲之故居，贺知章故居等名人故居，东湖、沈园、吼山、新昌大佛寺等，古代越王“卧薪尝胆”的故事更是家喻户晓。</p>\n</blockquote>\n<p><strong>出发</strong></p>\n<p>从杭州出发，坐早上7：27分的K1219，行车一个小时到达绍兴站，虽然从杭州到绍兴有高铁，又快又方便，但是，绍兴北站比较远，不方便游玩的安排，所以选择传统的快车。</p>\n<p><strong>宛委山</strong></p>\n<p>樱花林，出了绍兴站即可在站前广场的公交站-绍兴站坐2路公交车到宛委山，观赏樱花林（门票10元），乘坐着公交车一路观赏绍兴的建筑，沿着城中运河修建的砖瓦平房，给人一种很强的年代感，仿佛都还停留在过去的岁月里，不曾改变。</p>\n<p>由于我们来的时节比较早，樱花并未开放，所以这次并没有进林区赏樱，而是又回到了市区，游览鲁迅故里。</p>\n<p><strong>鲁迅故里</strong></p>\n<blockquote>\n<p>鲁迅故里位于中国浙江省绍兴市越城区鲁迅中路，是绍兴市一个著名的历史文化街区，包括鲁迅祖居、绍兴鲁迅故居和三味书屋、百草园、风情园、鲁迅博物馆以及土谷寺和绍兴古玩城。鲁迅于1881年在此出生并成长直至1898年离开。鲁迅故里是一个以全国文物保护单位绍兴鲁迅故居和三味书屋为核心搭配绍兴地方文化的国家5A级旅游景区。</p>\n</blockquote>\n<p>鲁迅故里是免费开放的，只需要凭身份证即可进入。进入鲁迅故里，想着鲁迅的散文《从百草园到三味书屋》仿佛走进了童年的回忆里，看着鲁迅小时候读过的私塾，从百草园（其实就是个大菜园），到三味书屋，还有老先生在三余书屋讲课（三味书屋的其中一家书屋），很有过去的味道。</p>\n<p><strong>王羲之故居</strong></p>\n<blockquote>\n<p>王羲之本是琅琊（今属山东临沂）人，后迁会稽山阴（今属浙江绍兴），晚年隐居剡县金庭。</p>\n</blockquote>\n<p>出了鲁迅故里，在对面一班公交便可到王羲之故居（其实就是一个寺庙），路口有一个牌楼，上面写着“书圣故里”四个大字。进去后看到的是很古色古香的街道，两边的商铺还有些过去的味道，往里走没多远就看到一个寺庙，门边写着“王羲之故居”，真的觉得我们可能逛了假故居。里面有关于王羲之的生平介绍，再往里有一个殿堂，供着大大的人像，乍一看以为是道教大殿，但怎么看都有点像王羲之的像。随便逛了一圈便出来了。在周围的古色古香建筑群里转了转，很适合拍照～</p>\n<p><strong>东湖</strong></p>\n<blockquote>\n<p>绍兴东湖位于中国浙江省绍兴市越城区城东皋埠镇，以山明水秀、岩奇洞幽、亭桥错落、湖洞相连而闻名，被誉为江南的水石大盆景，名列绍兴第二湖，仅次绍兴镜湖新区的镜湖。和杭州西湖、嘉兴南湖并称为浙江三大名湖。是国家4A级旅游景区。</p>\n</blockquote>\n<p>出了王羲之故居，门口可以坐一班公交车直接到东湖，门票50，单趟乌篷船包船（1-3人）85元，可能由于跑了一天比较疲惫，感觉东湖并没有想象中的那么好，第一感觉就是很小，比想象中的小多了，坐乌篷船10分钟左右就到底了，不坐船单趟沿途拍拍照顶多半个小时就能走过来。就一面壁立的石山，东湖沿着山流，说是湖，其实说成是小河感觉更合适，这国家的A级真容易评～</p>\n<p><strong>绍兴的美食</strong></p>\n<p>说到绍兴的美食，可能第一想到的就是黄酒（又称绍酒），我并不喜欢喝酒，所以也没有来品味这绍兴的黄酒，这次来绍兴特地查了一些绍兴的美食，像什么绍兴麻鸭、越鸡、茴香豆等等，本想着好好体验下绍兴美食，奈何没有口福，找不到能吃到这些美食的酒店。午餐就在鲁迅故里门口的丁大兴解决的，点了几样老板推荐的梅菜扣肉饭、三鲜面和醉鸡，感觉跟绍兴美食挂钩的恐怕就醉鸡了（其实就白切鸡配上黄酒），绍兴的臭豆腐可谓是随处可见，走到哪路边都能看见小摊卖臭豆腐。绍兴的臭豆腐和长沙的臭豆腐吃法还不一样，没有香菜和醋，只有甜酱和辣酱，而且是用白豆腐炸出来的，却也很有味道。在鲁迅路里有一家叫“祖传臭豆腐”的小店，价格实惠，味道不错，良心老板，只要五元便可购买一份，其他地方得要十元一份。</p>\n<p><strong>归程</strong></p>\n<p>晚上买的从绍兴站回杭州的特快列车，这次绍兴的一日游，也仅是游览了这么几个景点，相信其他地方应该别有一番风味，唯一感到可惜的是没有吃到地道的绍兴美食，不知道何年才有机会再游一次绍兴了。</p>\n"},{"title":"设置国内npm镜像","date":"2017-04-01T14:59:53.000Z","_content":"\nnpm全称Node Package Manager，是node.js的模块依赖管理工具。由于npm的源在国外，所以国内用户使用起来各种不方便。下面整理出了一部分国内优秀的npm镜像资源，国内用户可以选择使用。\n\n### 国内优秀npm镜像\n\n#### 淘宝npm镜像\n\n*   搜索地址：[http://npm.taobao.org/](http://npm.taobao.org/)\n*   registry地址：[http://registry.npm.taobao.org/](http://registry.npm.taobao.org/)\n\n#### cnpmjs镜像\n\n*   搜索地址：[http://cnpmjs.org/](http://cnpmjs.org/)\n*   registry地址：[http://r.cnpmjs.org/](http://r.cnpmjs.org/)\n\n### 如何使用\n\n有很多方法来配置npm的registry地址，下面根据不同情境列出几种比较常用的方法。以淘宝npm镜像举例：\n\n#### 1. 临时使用\n\n```bash\n$ npm --registry https://registry.npm.taobao.org install express\n```\n\n#### 2. 持久使用\n\n```bash\n$ npm config set registry https://registry.npm.taobao.org\n// 配置后可通过下面方式来验证是否成功\n$ npm config get registry\n// 或\n$ npm info express\n```\n\n#### 3. 通过cnpm使用\n\n```bash\n$ npm install -g cnpm --registry=https://registry.npm.taobao.org\n// 验证\ncnpm install express\n```\n\n> 文章转载自 [国内优秀npm镜像推荐及使用](http://riny.net/2014/cnpm/)\n","source":"_posts/设置国内npm镜像.md","raw":"---\ntitle: 设置国内npm镜像\ndate: 2017-04-01 22:59:53\ntags: npm\n---\n\nnpm全称Node Package Manager，是node.js的模块依赖管理工具。由于npm的源在国外，所以国内用户使用起来各种不方便。下面整理出了一部分国内优秀的npm镜像资源，国内用户可以选择使用。\n\n### 国内优秀npm镜像\n\n#### 淘宝npm镜像\n\n*   搜索地址：[http://npm.taobao.org/](http://npm.taobao.org/)\n*   registry地址：[http://registry.npm.taobao.org/](http://registry.npm.taobao.org/)\n\n#### cnpmjs镜像\n\n*   搜索地址：[http://cnpmjs.org/](http://cnpmjs.org/)\n*   registry地址：[http://r.cnpmjs.org/](http://r.cnpmjs.org/)\n\n### 如何使用\n\n有很多方法来配置npm的registry地址，下面根据不同情境列出几种比较常用的方法。以淘宝npm镜像举例：\n\n#### 1. 临时使用\n\n```bash\n$ npm --registry https://registry.npm.taobao.org install express\n```\n\n#### 2. 持久使用\n\n```bash\n$ npm config set registry https://registry.npm.taobao.org\n// 配置后可通过下面方式来验证是否成功\n$ npm config get registry\n// 或\n$ npm info express\n```\n\n#### 3. 通过cnpm使用\n\n```bash\n$ npm install -g cnpm --registry=https://registry.npm.taobao.org\n// 验证\ncnpm install express\n```\n\n> 文章转载自 [国内优秀npm镜像推荐及使用](http://riny.net/2014/cnpm/)\n","slug":"设置国内npm镜像","published":1,"updated":"2017-04-01T15:17:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj152ox5x0009da39da43ydvg","content":"<p>npm全称Node Package Manager，是node.js的模块依赖管理工具。由于npm的源在国外，所以国内用户使用起来各种不方便。下面整理出了一部分国内优秀的npm镜像资源，国内用户可以选择使用。</p>\n<h3 id=\"国内优秀npm镜像\"><a href=\"#国内优秀npm镜像\" class=\"headerlink\" title=\"国内优秀npm镜像\"></a>国内优秀npm镜像</h3><h4 id=\"淘宝npm镜像\"><a href=\"#淘宝npm镜像\" class=\"headerlink\" title=\"淘宝npm镜像\"></a>淘宝npm镜像</h4><ul>\n<li>搜索地址：<a href=\"http://npm.taobao.org/\" target=\"_blank\" rel=\"external\">http://npm.taobao.org/</a></li>\n<li>registry地址：<a href=\"http://registry.npm.taobao.org/\" target=\"_blank\" rel=\"external\">http://registry.npm.taobao.org/</a></li>\n</ul>\n<h4 id=\"cnpmjs镜像\"><a href=\"#cnpmjs镜像\" class=\"headerlink\" title=\"cnpmjs镜像\"></a>cnpmjs镜像</h4><ul>\n<li>搜索地址：<a href=\"http://cnpmjs.org/\" target=\"_blank\" rel=\"external\">http://cnpmjs.org/</a></li>\n<li>registry地址：<a href=\"http://r.cnpmjs.org/\" target=\"_blank\" rel=\"external\">http://r.cnpmjs.org/</a></li>\n</ul>\n<h3 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h3><p>有很多方法来配置npm的registry地址，下面根据不同情境列出几种比较常用的方法。以淘宝npm镜像举例：</p>\n<h4 id=\"1-临时使用\"><a href=\"#1-临时使用\" class=\"headerlink\" title=\"1. 临时使用\"></a>1. 临时使用</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm --registry https://registry.npm.taobao.org install express</div></pre></td></tr></table></figure>\n<h4 id=\"2-持久使用\"><a href=\"#2-持久使用\" class=\"headerlink\" title=\"2. 持久使用\"></a>2. 持久使用</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</div><div class=\"line\">// 配置后可通过下面方式来验证是否成功</div><div class=\"line\">$ npm config get registry</div><div class=\"line\">// 或</div><div class=\"line\">$ npm info express</div></pre></td></tr></table></figure>\n<h4 id=\"3-通过cnpm使用\"><a href=\"#3-通过cnpm使用\" class=\"headerlink\" title=\"3. 通过cnpm使用\"></a>3. 通过cnpm使用</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</div><div class=\"line\">// 验证</div><div class=\"line\">cnpm install express</div></pre></td></tr></table></figure>\n<blockquote>\n<p>文章转载自 <a href=\"http://riny.net/2014/cnpm/\" target=\"_blank\" rel=\"external\">国内优秀npm镜像推荐及使用</a></p>\n</blockquote>\n","excerpt":"","more":"<p>npm全称Node Package Manager，是node.js的模块依赖管理工具。由于npm的源在国外，所以国内用户使用起来各种不方便。下面整理出了一部分国内优秀的npm镜像资源，国内用户可以选择使用。</p>\n<h3 id=\"国内优秀npm镜像\"><a href=\"#国内优秀npm镜像\" class=\"headerlink\" title=\"国内优秀npm镜像\"></a>国内优秀npm镜像</h3><h4 id=\"淘宝npm镜像\"><a href=\"#淘宝npm镜像\" class=\"headerlink\" title=\"淘宝npm镜像\"></a>淘宝npm镜像</h4><ul>\n<li>搜索地址：<a href=\"http://npm.taobao.org/\">http://npm.taobao.org/</a></li>\n<li>registry地址：<a href=\"http://registry.npm.taobao.org/\">http://registry.npm.taobao.org/</a></li>\n</ul>\n<h4 id=\"cnpmjs镜像\"><a href=\"#cnpmjs镜像\" class=\"headerlink\" title=\"cnpmjs镜像\"></a>cnpmjs镜像</h4><ul>\n<li>搜索地址：<a href=\"http://cnpmjs.org/\">http://cnpmjs.org/</a></li>\n<li>registry地址：<a href=\"http://r.cnpmjs.org/\">http://r.cnpmjs.org/</a></li>\n</ul>\n<h3 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h3><p>有很多方法来配置npm的registry地址，下面根据不同情境列出几种比较常用的方法。以淘宝npm镜像举例：</p>\n<h4 id=\"1-临时使用\"><a href=\"#1-临时使用\" class=\"headerlink\" title=\"1. 临时使用\"></a>1. 临时使用</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm --registry https://registry.npm.taobao.org install express</div></pre></td></tr></table></figure>\n<h4 id=\"2-持久使用\"><a href=\"#2-持久使用\" class=\"headerlink\" title=\"2. 持久使用\"></a>2. 持久使用</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</div><div class=\"line\">// 配置后可通过下面方式来验证是否成功</div><div class=\"line\">$ npm config get registry</div><div class=\"line\">// 或</div><div class=\"line\">$ npm info express</div></pre></td></tr></table></figure>\n<h4 id=\"3-通过cnpm使用\"><a href=\"#3-通过cnpm使用\" class=\"headerlink\" title=\"3. 通过cnpm使用\"></a>3. 通过cnpm使用</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</div><div class=\"line\">// 验证</div><div class=\"line\">cnpm install express</div></pre></td></tr></table></figure>\n<blockquote>\n<p>文章转载自 <a href=\"http://riny.net/2014/cnpm/\">国内优秀npm镜像推荐及使用</a></p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj152ox480000da39mwixw0mb","tag_id":"cj152ox4i0003da39f7a2rpio","_id":"cj152ox5z000bda39193ay59x"},{"post_id":"cj152ox480000da39mwixw0mb","tag_id":"cj152ox5u0007da39spwcxk8u","_id":"cj152ox5z000cda39xftq5o7u"},{"post_id":"cj152ox4f0002da39ik6aruwm","tag_id":"cj152ox5y000ada399wde8d15","_id":"cj152ox60000eda39ewa0nxdd"},{"post_id":"cj152ox4k0004da39xtlg270k","tag_id":"cj152ox5z000dda399pneyop5","_id":"cj152ox60000gda39e05mevjm"},{"post_id":"cj152ox4n0005da39szoa0dm4","tag_id":"cj152ox5y000ada399wde8d15","_id":"cj152ox61000ida396bqo5a1l"},{"post_id":"cj152ox5t0006da391khyzvu0","tag_id":"cj152ox61000hda39vzhde2jo","_id":"cj152ox62000kda39fak6ilu4"},{"post_id":"cj152ox5v0008da39658tq4vn","tag_id":"cj152ox62000jda39g4p5gycu","_id":"cj152ox63000mda399807z4dd"},{"post_id":"cj152ox5x0009da39da43ydvg","tag_id":"cj152ox62000lda39gk5otbc3","_id":"cj152ox63000nda39w8s5f7dp"}],"Tag":[{"name":"手机游戏","_id":"cj152ox4i0003da39f7a2rpio"},{"name":"怀旧","_id":"cj152ox5u0007da39spwcxk8u"},{"name":"hexo","_id":"cj152ox5y000ada399wde8d15"},{"name":"git","_id":"cj152ox5z000dda399pneyop5"},{"name":"node.js","_id":"cj152ox61000hda39vzhde2jo"},{"name":"旅游","_id":"cj152ox62000jda39g4p5gycu"},{"name":"npm","_id":"cj152ox62000lda39gk5otbc3"}]}}