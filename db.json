{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/anatole/source/css/blog_basic.css","path":"css/blog_basic.css","modified":1,"renderable":1},{"_id":"themes/anatole/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/anatole/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/anatole/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/anatole/source/images/favicon.png","path":"images/favicon.png","modified":1,"renderable":1},{"_id":"themes/anatole/source/js/jquery.appear.js","path":"js/jquery.appear.js","modified":1,"renderable":1},{"_id":"themes/anatole/source/js/jquery-migrate-1.2.1.min.js","path":"js/jquery-migrate-1.2.1.min.js","modified":1,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/anatole/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/anatole/source/images/logo@2x.png","path":"images/logo@2x.png","modified":1,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/anatole/source/js/jquery.js","path":"js/jquery.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/anatole/LICENSE","hash":"359cb81298c1fdbccf531548fc097466b0151be4","modified":1490362131000},{"_id":"themes/anatole/_config.yml","hash":"9dec042e8a31c8f67ad833976753de573fd5171f","modified":1490367566000},{"_id":"themes/anatole/README.md","hash":"94cbb1f47236192db577dd5ebf8057977d74880c","modified":1490362131000},{"_id":"themes/anatole/package.json","hash":"cf731a3ebf3913747fccb6c4c6615eba7d7e88a4","modified":1490362131000},{"_id":"source/_posts/使用Hexo搭建Github个人博客.md","hash":"3bf262498c45c28f16a76abeb6720499e9013371","modified":1490366848000},{"_id":"source/_posts/如何安装Git.md","hash":"44ae7ca86eafb611249acc9e7dcfc663d27bd18e","modified":1490369113000},{"_id":"source/_posts/如何安装Nodejs.md","hash":"fbfd123b93f90b3585a12695381f20ed23040f97","modified":1490368183000},{"_id":"source/about/index.md","hash":"ea0d3d2c6d64714b61744e49c469f105ca769750","modified":1490362131000},{"_id":"source/links/index.md","hash":"7db04237eca12e37dc8d4f8d7d2cc68d611c80ee","modified":1490367457000},{"_id":"themes/anatole/languages/zh-cn.yml","hash":"dab1823e036f4adb3b7ae9efe95a37a15e47bec2","modified":1490362131000},{"_id":"themes/anatole/layout/archive.jade","hash":"8f58996b55dc3db3c96d69e88b0a6db4167d025b","modified":1490362131000},{"_id":"themes/anatole/layout/category.jade","hash":"2f2f113e99eb1ebdac475edba23a330dbd2e77bd","modified":1490362131000},{"_id":"themes/anatole/layout/index.jade","hash":"53da3cfd498951148acb33de1574df80ae282dc5","modified":1490362131000},{"_id":"themes/anatole/layout/mixins.jade","hash":"107bfd2fe10de0d8b110c13bb1168af79e62a37c","modified":1490362131000},{"_id":"themes/anatole/layout/page.jade","hash":"300e3fa98fd7cb2627589d3555ab4863cfeedd0c","modified":1490362131000},{"_id":"themes/anatole/layout/post.jade","hash":"0b830bf13f3c82a936fa44c687b3911606cd8bec","modified":1490362131000},{"_id":"themes/anatole/layout/tag.jade","hash":"b2dde91815560830b6a0f1dfbdd83aca88aba969","modified":1490362131000},{"_id":"themes/anatole/layout/partial/comments.jade","hash":"ee43e2fa9bed77868f2340435e455a3e647428df","modified":1490362131000},{"_id":"themes/anatole/layout/partial/footer.jade","hash":"aa112488f7b5bb1dacce489e16cb1fdca71c981b","modified":1490362131000},{"_id":"themes/anatole/layout/partial/head.jade","hash":"3d6126d0b53a889a46ad61eb8cc0ab1b35446c49","modified":1490362131000},{"_id":"themes/anatole/layout/partial/layout.jade","hash":"174050fa9ee919f5bcb2c5426224ec1968db672c","modified":1490362131000},{"_id":"themes/anatole/layout/partial/nav.jade","hash":"4e365888e749cea790c4f61d238f3d1e8f029777","modified":1490362131000},{"_id":"themes/anatole/layout/partial/sidebar.jade","hash":"fd3d880b6a34d43dc847837b0578f18886b3c479","modified":1490362131000},{"_id":"themes/anatole/source/css/blog_basic.css","hash":"d64140d9df61546d8cb1c1539e02c0165d649a53","modified":1490363415000},{"_id":"themes/anatole/source/css/style.css","hash":"26dbc60669c099ec299b4572800b24b3eeab7858","modified":1490362131000},{"_id":"themes/anatole/source/css/font-awesome.min.css","hash":"95d0b0c4d11105c81be1857b744076a1d2bed918","modified":1490362131000},{"_id":"themes/anatole/source/css/style.scss","hash":"a04e74dbb6baeb49ca2fddb27b68a413e04cf744","modified":1490362131000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.eot","hash":"0183979056f0b87616cd99d5c54a48f3b771eee6","modified":1490362131000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.woff","hash":"7d65e0227d0d7cdc1718119cd2a7dce0638f151c","modified":1490362131000},{"_id":"themes/anatole/source/images/favicon.png","hash":"d659236704308954da9d64b101c4f54cc3f3255c","modified":1490362131000},{"_id":"themes/anatole/source/js/jquery.appear.js","hash":"1f8067d7bd4c0bde30785e8016100f239e14394f","modified":1490362131000},{"_id":"themes/anatole/source/js/jquery-migrate-1.2.1.min.js","hash":"743052320809514fb788fe1d3df37fc87ce90452","modified":1490362131000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.ttf","hash":"6225ccc4ec94d060f19efab97ca42d842845b949","modified":1490362131000},{"_id":"themes/anatole/source/images/logo.png","hash":"b1e7ac4ac9ede62f89b1180660b21442c95ca4d2","modified":1490362131000},{"_id":"themes/anatole/source/images/logo@2x.png","hash":"c5b8fe68d224f4cfaf3aee631355bf8c2f6a2e38","modified":1490362131000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.svg","hash":"cd980eab6db5fa57db670cb2e4278e67e1a4d6c9","modified":1490362131000},{"_id":"themes/anatole/source/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1490362131000},{"_id":"public/about/index.html","hash":"d6e465e6f7a715394079923ab9c73185ad5a53de","modified":1490369256423},{"_id":"public/links/index.html","hash":"b30192198d66608b0e30a08ccdcaf1f9a5bb7ffa","modified":1490369256423},{"_id":"public/2017/03/24/如何安装Git/index.html","hash":"eab8239bf75f9e14ec6f54a793b9ae13235c0d80","modified":1490369256423},{"_id":"public/2017/03/24/如何安装Nodejs/index.html","hash":"9e56fe1a5ba2f7ec4b964a9ff8c2150b6992de19","modified":1490369256423},{"_id":"public/2017/03/24/使用Hexo搭建Github个人博客/index.html","hash":"5ca738177a18a64bffb5260626bff85ee7a085ca","modified":1490369256423},{"_id":"public/archives/index.html","hash":"020fa03d9f5b446f841fd320f139ced694de1adf","modified":1490369256423},{"_id":"public/archives/2017/index.html","hash":"020fa03d9f5b446f841fd320f139ced694de1adf","modified":1490369256423},{"_id":"public/archives/2017/03/index.html","hash":"020fa03d9f5b446f841fd320f139ced694de1adf","modified":1490369256423},{"_id":"public/index.html","hash":"bf3c5c25fd302959801b1cdacfa9ab8c74a5ed7f","modified":1490369256423},{"_id":"public/tags/hexo/index.html","hash":"48df65e0e343dd4b9c6b1f0d751487914c3e1a80","modified":1490369256424},{"_id":"public/tags/git/index.html","hash":"9d8cbf3680434c525654fbc5235e4f8de1443a8b","modified":1490369256424},{"_id":"public/tags/node-js/index.html","hash":"39b4c98cd3280cfc69b9376f9694b292dc26ff31","modified":1490369256424},{"_id":"public/css/style.scss","hash":"a04e74dbb6baeb49ca2fddb27b68a413e04cf744","modified":1490369256426},{"_id":"public/images/favicon.png","hash":"d659236704308954da9d64b101c4f54cc3f3255c","modified":1490369256427},{"_id":"public/fonts/fontawesome-webfont.eot","hash":"0183979056f0b87616cd99d5c54a48f3b771eee6","modified":1490369256427},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"7d65e0227d0d7cdc1718119cd2a7dce0638f151c","modified":1490369256427},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"6225ccc4ec94d060f19efab97ca42d842845b949","modified":1490369256429},{"_id":"public/images/logo.png","hash":"b1e7ac4ac9ede62f89b1180660b21442c95ca4d2","modified":1490369256431},{"_id":"public/css/blog_basic.css","hash":"d64140d9df61546d8cb1c1539e02c0165d649a53","modified":1490369256435},{"_id":"public/css/style.css","hash":"26dbc60669c099ec299b4572800b24b3eeab7858","modified":1490369256435},{"_id":"public/js/jquery.appear.js","hash":"1f8067d7bd4c0bde30785e8016100f239e14394f","modified":1490369256435},{"_id":"public/js/jquery-migrate-1.2.1.min.js","hash":"743052320809514fb788fe1d3df37fc87ce90452","modified":1490369256435},{"_id":"public/css/font-awesome.min.css","hash":"95d0b0c4d11105c81be1857b744076a1d2bed918","modified":1490369256435},{"_id":"public/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1490369256435},{"_id":"public/images/logo@2x.png","hash":"c5b8fe68d224f4cfaf3aee631355bf8c2f6a2e38","modified":1490369256437},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"cd980eab6db5fa57db670cb2e4278e67e1a4d6c9","modified":1490369256439}],"Category":[],"Data":[],"Page":[{"title":"关于","date":"2017-03-19T14:58:19.000Z","_content":"\n** 我 **\n\n你好，我叫顾云翔，生于1993年3月2日，安徽省铜陵市人，目前生活在杭州，从事前端开发工作。\n\n高中时期，开始对电脑感兴趣，在一次电脑课上，使用VB语言写了一个加密小程序，让我对软件开发产生了兴趣。\n\n大学时代，参加了电脑学习小组，认识了改变我整个大学了老师，他教导了重新认识软件开发，为我指点软件开发的方向，在他的引导下，我从大二开始参加了很多软件开发的比赛，其中有各种市级、省级甚至国家级的比赛，也不乏百度这样互联网公司的比赛。\n\n例如：13年的百度Hackathon&Astar比赛，14年的高德LBS编程马拉松等。大学时使我经历了很多，也成长了很多。\n\n毕业后的我，开始从事前端开发工作。我喜欢这种所见即所得的开发方式，喜欢接触新的前端技术，自豪于现在前端技术可以应用于更多的领域。\n\n从一开始前台的web应用开发到后台的Node.js开发，从PC web应用到移动web应用，从hybrid混合应用开发到如今React Native原生应用开发，每一次技术的革新我都跟上了它前进的步伐，期望在今后的时光里，我能继续努力，勇往之前。\n\n生活中，我喜爱音乐，喜欢乐器，有一把40寸的吉他，还有一把27寸的乌克丽丽，喜欢唱歌，跑步，打游戏，看小说，如果没有安排，喜欢宅在家里，偶尔去健身房锻炼锻炼身体，喜欢美食，算是吃货吧，拿手好菜，青椒土豆肉丝。\n\n我的人生格言是：\"I ain't gonna be just a face in crowd.\"\n\n** 博客 **\n\n早些年，习惯在博客园、CSDN或者笔记软件里写文章，总结技术等。可是写的地方多了，文章也就散乱了，缺乏整理和归纳。\n\n现如今，想要通过这个博客，统一归纳这些年自己的整理和总结，也期望今后能有更好的文章写到这里与大家分享。\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2017-03-19 22:58:19\n---\n\n** 我 **\n\n你好，我叫顾云翔，生于1993年3月2日，安徽省铜陵市人，目前生活在杭州，从事前端开发工作。\n\n高中时期，开始对电脑感兴趣，在一次电脑课上，使用VB语言写了一个加密小程序，让我对软件开发产生了兴趣。\n\n大学时代，参加了电脑学习小组，认识了改变我整个大学了老师，他教导了重新认识软件开发，为我指点软件开发的方向，在他的引导下，我从大二开始参加了很多软件开发的比赛，其中有各种市级、省级甚至国家级的比赛，也不乏百度这样互联网公司的比赛。\n\n例如：13年的百度Hackathon&Astar比赛，14年的高德LBS编程马拉松等。大学时使我经历了很多，也成长了很多。\n\n毕业后的我，开始从事前端开发工作。我喜欢这种所见即所得的开发方式，喜欢接触新的前端技术，自豪于现在前端技术可以应用于更多的领域。\n\n从一开始前台的web应用开发到后台的Node.js开发，从PC web应用到移动web应用，从hybrid混合应用开发到如今React Native原生应用开发，每一次技术的革新我都跟上了它前进的步伐，期望在今后的时光里，我能继续努力，勇往之前。\n\n生活中，我喜爱音乐，喜欢乐器，有一把40寸的吉他，还有一把27寸的乌克丽丽，喜欢唱歌，跑步，打游戏，看小说，如果没有安排，喜欢宅在家里，偶尔去健身房锻炼锻炼身体，喜欢美食，算是吃货吧，拿手好菜，青椒土豆肉丝。\n\n我的人生格言是：\"I ain't gonna be just a face in crowd.\"\n\n** 博客 **\n\n早些年，习惯在博客园、CSDN或者笔记软件里写文章，总结技术等。可是写的地方多了，文章也就散乱了，缺乏整理和归纳。\n\n现如今，想要通过这个博客，统一归纳这些年自己的整理和总结，也期望今后能有更好的文章写到这里与大家分享。\n","updated":"2017-03-24T13:28:51.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj0nzdhew0001r139jborkbpc","content":"<p><strong> 我 </strong></p>\n<p>你好，我叫顾云翔，生于1993年3月2日，安徽省铜陵市人，目前生活在杭州，从事前端开发工作。</p>\n<p>高中时期，开始对电脑感兴趣，在一次电脑课上，使用VB语言写了一个加密小程序，让我对软件开发产生了兴趣。</p>\n<p>大学时代，参加了电脑学习小组，认识了改变我整个大学了老师，他教导了重新认识软件开发，为我指点软件开发的方向，在他的引导下，我从大二开始参加了很多软件开发的比赛，其中有各种市级、省级甚至国家级的比赛，也不乏百度这样互联网公司的比赛。</p>\n<p>例如：13年的百度Hackathon&amp;Astar比赛，14年的高德LBS编程马拉松等。大学时使我经历了很多，也成长了很多。</p>\n<p>毕业后的我，开始从事前端开发工作。我喜欢这种所见即所得的开发方式，喜欢接触新的前端技术，自豪于现在前端技术可以应用于更多的领域。</p>\n<p>从一开始前台的web应用开发到后台的Node.js开发，从PC web应用到移动web应用，从hybrid混合应用开发到如今React Native原生应用开发，每一次技术的革新我都跟上了它前进的步伐，期望在今后的时光里，我能继续努力，勇往之前。</p>\n<p>生活中，我喜爱音乐，喜欢乐器，有一把40寸的吉他，还有一把27寸的乌克丽丽，喜欢唱歌，跑步，打游戏，看小说，如果没有安排，喜欢宅在家里，偶尔去健身房锻炼锻炼身体，喜欢美食，算是吃货吧，拿手好菜，青椒土豆肉丝。</p>\n<p>我的人生格言是：”I ain’t gonna be just a face in crowd.”</p>\n<p><strong> 博客 </strong></p>\n<p>早些年，习惯在博客园、CSDN或者笔记软件里写文章，总结技术等。可是写的地方多了，文章也就散乱了，缺乏整理和归纳。</p>\n<p>现如今，想要通过这个博客，统一归纳这些年自己的整理和总结，也期望今后能有更好的文章写到这里与大家分享。</p>\n","excerpt":"","more":"<p><strong> 我 </strong></p>\n<p>你好，我叫顾云翔，生于1993年3月2日，安徽省铜陵市人，目前生活在杭州，从事前端开发工作。</p>\n<p>高中时期，开始对电脑感兴趣，在一次电脑课上，使用VB语言写了一个加密小程序，让我对软件开发产生了兴趣。</p>\n<p>大学时代，参加了电脑学习小组，认识了改变我整个大学了老师，他教导了重新认识软件开发，为我指点软件开发的方向，在他的引导下，我从大二开始参加了很多软件开发的比赛，其中有各种市级、省级甚至国家级的比赛，也不乏百度这样互联网公司的比赛。</p>\n<p>例如：13年的百度Hackathon&amp;Astar比赛，14年的高德LBS编程马拉松等。大学时使我经历了很多，也成长了很多。</p>\n<p>毕业后的我，开始从事前端开发工作。我喜欢这种所见即所得的开发方式，喜欢接触新的前端技术，自豪于现在前端技术可以应用于更多的领域。</p>\n<p>从一开始前台的web应用开发到后台的Node.js开发，从PC web应用到移动web应用，从hybrid混合应用开发到如今React Native原生应用开发，每一次技术的革新我都跟上了它前进的步伐，期望在今后的时光里，我能继续努力，勇往之前。</p>\n<p>生活中，我喜爱音乐，喜欢乐器，有一把40寸的吉他，还有一把27寸的乌克丽丽，喜欢唱歌，跑步，打游戏，看小说，如果没有安排，喜欢宅在家里，偶尔去健身房锻炼锻炼身体，喜欢美食，算是吃货吧，拿手好菜，青椒土豆肉丝。</p>\n<p>我的人生格言是：”I ain’t gonna be just a face in crowd.”</p>\n<p><strong> 博客 </strong></p>\n<p>早些年，习惯在博客园、CSDN或者笔记软件里写文章，总结技术等。可是写的地方多了，文章也就散乱了，缺乏整理和归纳。</p>\n<p>现如今，想要通过这个博客，统一归纳这些年自己的整理和总结，也期望今后能有更好的文章写到这里与大家分享。</p>\n"},{"title":"友链","date":"2017-03-19T16:03:10.000Z","_content":"[hexo](https://hexo.io/) 首页\n\n[hexo-theme-Anatole](https://github.com/Ben02/hexo-theme-Anatole) 主题 Github\n\n[Font Awesome](http://fontawesome.io/)\n","source":"links/index.md","raw":"---\ntitle: 友链\ndate: 2017-03-20 00:03:10\n---\n[hexo](https://hexo.io/) 首页\n\n[hexo-theme-Anatole](https://github.com/Ben02/hexo-theme-Anatole) 主题 Github\n\n[Font Awesome](http://fontawesome.io/)\n","updated":"2017-03-24T14:57:37.000Z","path":"links/index.html","comments":1,"layout":"page","_id":"cj0nzdhwa000ar1398hvjlgay","content":"<p><a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">hexo</a> 首页</p>\n<p><a href=\"https://github.com/Ben02/hexo-theme-Anatole\" target=\"_blank\" rel=\"external\">hexo-theme-Anatole</a> 主题 Github</p>\n<p><a href=\"http://fontawesome.io/\" target=\"_blank\" rel=\"external\">Font Awesome</a></p>\n","excerpt":"","more":"<p><a href=\"https://hexo.io/\">hexo</a> 首页</p>\n<p><a href=\"https://github.com/Ben02/hexo-theme-Anatole\">hexo-theme-Anatole</a> 主题 Github</p>\n<p><a href=\"http://fontawesome.io/\">Font Awesome</a></p>\n"}],"Post":[{"title":"使用Hexo搭建Github个人博客","date":"2017-03-24T13:25:13.000Z","_content":"网上关于hexo搭建博客的文章已经有很多，这里只做为个人博客的试笔文章，记录下hexo博客搭建的过程和心得。\n\n### Hexo\n\n> Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n### 搭建准备\n\n* Node.js\n* Git & Github\n\nNode.js安装方式很多，见 [如何安装Node.js](../如何安装Nodejs/) 文章\nGit 安装方法，见 [如何安装Git](../如何安装Git/) 文章\n\nnode.js 和 git 都安装完成后即可开始搭建hexo个人博客了。\n\n### 开始搭建\n\n#### 安装 hexo\n\n```bash\n$ npm i -g hexo-cli\n```\n> Mac 用户\n> 您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -> Download -> Command Line Tools -> Install 安装命令行工具。\n\n#### 初始化 blog\n\n```bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n#### 写文章\n\n你可以执行下列命令来创建一篇新文章。\n\n```bash\n$ hexo new [layout] <title>\n```\n> 可以在命令中指定文章的布局（layout），默认为 post，可以通过修改_config.yml 中的 default_layout 参数来指定默认布局。\n\n#### 服务器\n\n使用 hexo-server 启动本地服务查看博客\n\n> Hexo 3.0 把服务器独立成了个别模块，必须先安装 hexo-server 才能使用。\n\n```bash\n$ npm i hexo-server --save\n```\n\n** 启动服务 **\n\n```bash\n$ hexo server\n```\n\n** 实时刷新 **\n\n安装 hexo-browsersync，监听文档变化，实时刷新页面\n\n```bash\n$ npm i hexo-browsersync --save\n$ hexo server\n```\n\n#### 生成器\n\n使用 hexo generate 生成静态文件\n\n```bash\n$ hexo generate\n```\n\n** 监听文件变动 **\n\n```bash\n$ hexo generate --watch\n```\n\n#### 部署\n\n```bash\n$ hexo deploy\n```\n\n### 部署到Github上\n\n#### 新建仓库\n\ngithub 有个功能叫 Github Pages，可以使用当前账号的名称作为二级域名建立一个自己的网站，前提是这个仓库的名字是 your_name.github.io 这种格式，your_name是你的github账户名。\n\n#### 部署到github上\n\n安装 hexo-deployer-git\n\n```bash\n$ npm i hexo-deployer-git --save\n```\n\n修改配置项：\n\n```bash\n_config.yml\n...\n# hexo-deployer-git config\ndeploy:\n  type: git\n  repo: <repository url> #库（Repository）地址\n  branch: [branch] #分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。\n  message: [message] #自定义提交信息 (默认为 Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }})\n```\n\n运行\n\n```bash\n$ hexo deploy\n```\n\n即可将生成的静态文件部署到github上。\n\n访问自己的 your_name.github.io 即可访问自己的博客了。\n","source":"_posts/使用Hexo搭建Github个人博客.md","raw":"---\ntitle: 使用Hexo搭建Github个人博客\ndate: 2017-03-24 21:25:13\ntags: hexo\n---\n网上关于hexo搭建博客的文章已经有很多，这里只做为个人博客的试笔文章，记录下hexo博客搭建的过程和心得。\n\n### Hexo\n\n> Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n### 搭建准备\n\n* Node.js\n* Git & Github\n\nNode.js安装方式很多，见 [如何安装Node.js](../如何安装Nodejs/) 文章\nGit 安装方法，见 [如何安装Git](../如何安装Git/) 文章\n\nnode.js 和 git 都安装完成后即可开始搭建hexo个人博客了。\n\n### 开始搭建\n\n#### 安装 hexo\n\n```bash\n$ npm i -g hexo-cli\n```\n> Mac 用户\n> 您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -> Download -> Command Line Tools -> Install 安装命令行工具。\n\n#### 初始化 blog\n\n```bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n#### 写文章\n\n你可以执行下列命令来创建一篇新文章。\n\n```bash\n$ hexo new [layout] <title>\n```\n> 可以在命令中指定文章的布局（layout），默认为 post，可以通过修改_config.yml 中的 default_layout 参数来指定默认布局。\n\n#### 服务器\n\n使用 hexo-server 启动本地服务查看博客\n\n> Hexo 3.0 把服务器独立成了个别模块，必须先安装 hexo-server 才能使用。\n\n```bash\n$ npm i hexo-server --save\n```\n\n** 启动服务 **\n\n```bash\n$ hexo server\n```\n\n** 实时刷新 **\n\n安装 hexo-browsersync，监听文档变化，实时刷新页面\n\n```bash\n$ npm i hexo-browsersync --save\n$ hexo server\n```\n\n#### 生成器\n\n使用 hexo generate 生成静态文件\n\n```bash\n$ hexo generate\n```\n\n** 监听文件变动 **\n\n```bash\n$ hexo generate --watch\n```\n\n#### 部署\n\n```bash\n$ hexo deploy\n```\n\n### 部署到Github上\n\n#### 新建仓库\n\ngithub 有个功能叫 Github Pages，可以使用当前账号的名称作为二级域名建立一个自己的网站，前提是这个仓库的名字是 your_name.github.io 这种格式，your_name是你的github账户名。\n\n#### 部署到github上\n\n安装 hexo-deployer-git\n\n```bash\n$ npm i hexo-deployer-git --save\n```\n\n修改配置项：\n\n```bash\n_config.yml\n...\n# hexo-deployer-git config\ndeploy:\n  type: git\n  repo: <repository url> #库（Repository）地址\n  branch: [branch] #分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。\n  message: [message] #自定义提交信息 (默认为 Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }})\n```\n\n运行\n\n```bash\n$ hexo deploy\n```\n\n即可将生成的静态文件部署到github上。\n\n访问自己的 your_name.github.io 即可访问自己的博客了。\n","slug":"使用Hexo搭建Github个人博客","published":1,"updated":"2017-03-24T14:47:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0nzdher0000r13995nris66","content":"<p>网上关于hexo搭建博客的文章已经有很多，这里只做为个人博客的试笔文章，记录下hexo博客搭建的过程和心得。</p>\n<h3 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h3><blockquote>\n<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n</blockquote>\n<h3 id=\"搭建准备\"><a href=\"#搭建准备\" class=\"headerlink\" title=\"搭建准备\"></a>搭建准备</h3><ul>\n<li>Node.js</li>\n<li>Git &amp; Github</li>\n</ul>\n<p>Node.js安装方式很多，见 <a href=\"../如何安装Nodejs/\">如何安装Node.js</a> 文章<br>Git 安装方法，见 <a href=\"../如何安装Git/\">如何安装Git</a> 文章</p>\n<p>node.js 和 git 都安装完成后即可开始搭建hexo个人博客了。</p>\n<h3 id=\"开始搭建\"><a href=\"#开始搭建\" class=\"headerlink\" title=\"开始搭建\"></a>开始搭建</h3><h4 id=\"安装-hexo\"><a href=\"#安装-hexo\" class=\"headerlink\" title=\"安装 hexo\"></a>安装 hexo</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i -g hexo-cli</div></pre></td></tr></table></figure>\n<blockquote>\n<p>Mac 用户<br>您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install 安装命令行工具。</p>\n</blockquote>\n<h4 id=\"初始化-blog\"><a href=\"#初始化-blog\" class=\"headerlink\" title=\"初始化 blog\"></a>初始化 blog</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init &lt;folder&gt;</div><div class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n<h4 id=\"写文章\"><a href=\"#写文章\" class=\"headerlink\" title=\"写文章\"></a>写文章</h4><p>你可以执行下列命令来创建一篇新文章。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>可以在命令中指定文章的布局（layout），默认为 post，可以通过修改_config.yml 中的 default_layout 参数来指定默认布局。</p>\n</blockquote>\n<h4 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h4><p>使用 hexo-server 启动本地服务查看博客</p>\n<blockquote>\n<p>Hexo 3.0 把服务器独立成了个别模块，必须先安装 hexo-server 才能使用。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i hexo-server --save</div></pre></td></tr></table></figure>\n<p><strong> 启动服务 </strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p><strong> 实时刷新 </strong></p>\n<p>安装 hexo-browsersync，监听文档变化，实时刷新页面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i hexo-browsersync --save</div><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<h4 id=\"生成器\"><a href=\"#生成器\" class=\"headerlink\" title=\"生成器\"></a>生成器</h4><p>使用 hexo generate 生成静态文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p><strong> 监听文件变动 </strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate --watch</div></pre></td></tr></table></figure>\n<h4 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<h3 id=\"部署到Github上\"><a href=\"#部署到Github上\" class=\"headerlink\" title=\"部署到Github上\"></a>部署到Github上</h3><h4 id=\"新建仓库\"><a href=\"#新建仓库\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h4><p>github 有个功能叫 Github Pages，可以使用当前账号的名称作为二级域名建立一个自己的网站，前提是这个仓库的名字是 your_name.github.io 这种格式，your_name是你的github账户名。</p>\n<h4 id=\"部署到github上\"><a href=\"#部署到github上\" class=\"headerlink\" title=\"部署到github上\"></a>部署到github上</h4><p>安装 hexo-deployer-git</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i hexo-deployer-git --save</div></pre></td></tr></table></figure>\n<p>修改配置项：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">_config.yml</div><div class=\"line\">...</div><div class=\"line\"><span class=\"comment\"># hexo-deployer-git config</span></div><div class=\"line\">deploy:</div><div class=\"line\">  <span class=\"built_in\">type</span>: git</div><div class=\"line\">  repo: &lt;repository url&gt; <span class=\"comment\">#库（Repository）地址</span></div><div class=\"line\">  branch: [branch] <span class=\"comment\">#分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。</span></div><div class=\"line\">  message: [message] <span class=\"comment\">#自定义提交信息 (默认为 Site updated: &#123;&#123; now('YYYY-MM-DD HH:mm:ss') &#125;&#125;)</span></div></pre></td></tr></table></figure>\n<p>运行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>即可将生成的静态文件部署到github上。</p>\n<p>访问自己的 your_name.github.io 即可访问自己的博客了。</p>\n","excerpt":"","more":"<p>网上关于hexo搭建博客的文章已经有很多，这里只做为个人博客的试笔文章，记录下hexo博客搭建的过程和心得。</p>\n<h3 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h3><blockquote>\n<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n</blockquote>\n<h3 id=\"搭建准备\"><a href=\"#搭建准备\" class=\"headerlink\" title=\"搭建准备\"></a>搭建准备</h3><ul>\n<li>Node.js</li>\n<li>Git &amp; Github</li>\n</ul>\n<p>Node.js安装方式很多，见 <a href=\"../如何安装Nodejs/\">如何安装Node.js</a> 文章<br>Git 安装方法，见 <a href=\"../如何安装Git/\">如何安装Git</a> 文章</p>\n<p>node.js 和 git 都安装完成后即可开始搭建hexo个人博客了。</p>\n<h3 id=\"开始搭建\"><a href=\"#开始搭建\" class=\"headerlink\" title=\"开始搭建\"></a>开始搭建</h3><h4 id=\"安装-hexo\"><a href=\"#安装-hexo\" class=\"headerlink\" title=\"安装 hexo\"></a>安装 hexo</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i -g hexo-cli</div></pre></td></tr></table></figure>\n<blockquote>\n<p>Mac 用户<br>您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install 安装命令行工具。</p>\n</blockquote>\n<h4 id=\"初始化-blog\"><a href=\"#初始化-blog\" class=\"headerlink\" title=\"初始化 blog\"></a>初始化 blog</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init &lt;folder&gt;</div><div class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n<h4 id=\"写文章\"><a href=\"#写文章\" class=\"headerlink\" title=\"写文章\"></a>写文章</h4><p>你可以执行下列命令来创建一篇新文章。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>可以在命令中指定文章的布局（layout），默认为 post，可以通过修改_config.yml 中的 default_layout 参数来指定默认布局。</p>\n</blockquote>\n<h4 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h4><p>使用 hexo-server 启动本地服务查看博客</p>\n<blockquote>\n<p>Hexo 3.0 把服务器独立成了个别模块，必须先安装 hexo-server 才能使用。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i hexo-server --save</div></pre></td></tr></table></figure>\n<p><strong> 启动服务 </strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p><strong> 实时刷新 </strong></p>\n<p>安装 hexo-browsersync，监听文档变化，实时刷新页面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i hexo-browsersync --save</div><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<h4 id=\"生成器\"><a href=\"#生成器\" class=\"headerlink\" title=\"生成器\"></a>生成器</h4><p>使用 hexo generate 生成静态文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p><strong> 监听文件变动 </strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate --watch</div></pre></td></tr></table></figure>\n<h4 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<h3 id=\"部署到Github上\"><a href=\"#部署到Github上\" class=\"headerlink\" title=\"部署到Github上\"></a>部署到Github上</h3><h4 id=\"新建仓库\"><a href=\"#新建仓库\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h4><p>github 有个功能叫 Github Pages，可以使用当前账号的名称作为二级域名建立一个自己的网站，前提是这个仓库的名字是 your_name.github.io 这种格式，your_name是你的github账户名。</p>\n<h4 id=\"部署到github上\"><a href=\"#部署到github上\" class=\"headerlink\" title=\"部署到github上\"></a>部署到github上</h4><p>安装 hexo-deployer-git</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i hexo-deployer-git --save</div></pre></td></tr></table></figure>\n<p>修改配置项：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">_config.yml</div><div class=\"line\">...</div><div class=\"line\"><span class=\"comment\"># hexo-deployer-git config</span></div><div class=\"line\">deploy:</div><div class=\"line\">  <span class=\"built_in\">type</span>: git</div><div class=\"line\">  repo: &lt;repository url&gt; <span class=\"comment\">#库（Repository）地址</span></div><div class=\"line\">  branch: [branch] <span class=\"comment\">#分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。</span></div><div class=\"line\">  message: [message] <span class=\"comment\">#自定义提交信息 (默认为 Site updated: &#123;&#123; now('YYYY-MM-DD HH:mm:ss') &#125;&#125;)</span></div></pre></td></tr></table></figure>\n<p>运行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>即可将生成的静态文件部署到github上。</p>\n<p>访问自己的 your_name.github.io 即可访问自己的博客了。</p>\n"},{"title":"如何安装Git","date":"2017-03-24T15:11:55.000Z","_content":"\n### Windows\n\n下载安装 [git](https://git-scm.com/downloads)\n\n### Linxu\n\n#### Debian/Ubuntu\n\n12.04 下\n\nUbuntu12.04中默认没有安装Git。需要自行安装\n\n```bash\n$ sudo add-apt-repository ppa:git-core/ppa\n$ sudo apt-get update\n$ sudo apt-get install git\n```\n\n12.04 以上\n\n```bash\n$ sudo apt-get install git\n```\n\n#### Centos/RedHat\n\n```bash\n$ sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\n$ sudo yum -y install git-core\n```\n\n### Mac\n\nmac 下自带 git，也可以从官网下载安装 [git](https://git-scm.com/downloads)\n","source":"_posts/如何安装Git.md","raw":"---\ntitle: 如何安装Git\ndate: 2017-03-24 23:11:55\ntags: git\n---\n\n### Windows\n\n下载安装 [git](https://git-scm.com/downloads)\n\n### Linxu\n\n#### Debian/Ubuntu\n\n12.04 下\n\nUbuntu12.04中默认没有安装Git。需要自行安装\n\n```bash\n$ sudo add-apt-repository ppa:git-core/ppa\n$ sudo apt-get update\n$ sudo apt-get install git\n```\n\n12.04 以上\n\n```bash\n$ sudo apt-get install git\n```\n\n#### Centos/RedHat\n\n```bash\n$ sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\n$ sudo yum -y install git-core\n```\n\n### Mac\n\nmac 下自带 git，也可以从官网下载安装 [git](https://git-scm.com/downloads)\n","slug":"如何安装Git","published":1,"updated":"2017-03-24T15:25:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0nzdhex0002r139ssju3b2u","content":"<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p>下载安装 <a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"external\">git</a></p>\n<h3 id=\"Linxu\"><a href=\"#Linxu\" class=\"headerlink\" title=\"Linxu\"></a>Linxu</h3><h4 id=\"Debian-Ubuntu\"><a href=\"#Debian-Ubuntu\" class=\"headerlink\" title=\"Debian/Ubuntu\"></a>Debian/Ubuntu</h4><p>12.04 下</p>\n<p>Ubuntu12.04中默认没有安装Git。需要自行安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo add-apt-repository ppa:git-core/ppa</div><div class=\"line\">$ sudo apt-get update</div><div class=\"line\">$ sudo apt-get install git</div></pre></td></tr></table></figure>\n<p>12.04 以上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install git</div></pre></td></tr></table></figure>\n<h4 id=\"Centos-RedHat\"><a href=\"#Centos-RedHat\" class=\"headerlink\" title=\"Centos/RedHat\"></a>Centos/RedHat</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</div><div class=\"line\">$ sudo yum -y install git-core</div></pre></td></tr></table></figure>\n<h3 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h3><p>mac 下自带 git，也可以从官网下载安装 <a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"external\">git</a></p>\n","excerpt":"","more":"<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p>下载安装 <a href=\"https://git-scm.com/downloads\">git</a></p>\n<h3 id=\"Linxu\"><a href=\"#Linxu\" class=\"headerlink\" title=\"Linxu\"></a>Linxu</h3><h4 id=\"Debian-Ubuntu\"><a href=\"#Debian-Ubuntu\" class=\"headerlink\" title=\"Debian/Ubuntu\"></a>Debian/Ubuntu</h4><p>12.04 下</p>\n<p>Ubuntu12.04中默认没有安装Git。需要自行安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo add-apt-repository ppa:git-core/ppa</div><div class=\"line\">$ sudo apt-get update</div><div class=\"line\">$ sudo apt-get install git</div></pre></td></tr></table></figure>\n<p>12.04 以上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install git</div></pre></td></tr></table></figure>\n<h4 id=\"Centos-RedHat\"><a href=\"#Centos-RedHat\" class=\"headerlink\" title=\"Centos/RedHat\"></a>Centos/RedHat</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</div><div class=\"line\">$ sudo yum -y install git-core</div></pre></td></tr></table></figure>\n<h3 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h3><p>mac 下自带 git，也可以从官网下载安装 <a href=\"https://git-scm.com/downloads\">git</a></p>\n"},{"title":"如何安装Nodejs","date":"2017-03-24T13:44:38.000Z","_content":"安装Node.js的方式有很多，这里推荐使用 [nvm](https://github.com/creationix/nvm) 版本控制器进行安装。因为可以进行node.js版本管理，方便升级和倒退。\n\n#### 安装 nvm\n\n** 下载 nvm **\n\ncurl：\n```bash\n$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\nwget:\n```bash\n$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\nbrew:\n```bash\n$ brew install nvm\n```\n\n完成后 nvm 就安装在了 ~/.nvm 目录，需要为 nvm 配置环境变量，即可在终端使用 nvm 了。\n\n** 配置 nvm 环境变量 **\n\n```bash\n$ vim ~/.bash_profile\n```\n\n添加如下内容：\n\n```bash\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"\n```\nbrew 配置\n```bash\nexport NUM_DIR=~/.nvm\nsource $(brew --prefix nvm)/nvm.sh\n```\n\n#### nvm 安装 node.js\n\n安装完成后，重启终端并执行下列命令即可安装 Node.js。\n\n```bash\n$ nvm install stable\n```\n","source":"_posts/如何安装Nodejs.md","raw":"---\ntitle: 如何安装Nodejs\ndate: 2017-03-24 21:44:38\ntags: node.js\n---\n安装Node.js的方式有很多，这里推荐使用 [nvm](https://github.com/creationix/nvm) 版本控制器进行安装。因为可以进行node.js版本管理，方便升级和倒退。\n\n#### 安装 nvm\n\n** 下载 nvm **\n\ncurl：\n```bash\n$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\nwget:\n```bash\n$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\nbrew:\n```bash\n$ brew install nvm\n```\n\n完成后 nvm 就安装在了 ~/.nvm 目录，需要为 nvm 配置环境变量，即可在终端使用 nvm 了。\n\n** 配置 nvm 环境变量 **\n\n```bash\n$ vim ~/.bash_profile\n```\n\n添加如下内容：\n\n```bash\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"\n```\nbrew 配置\n```bash\nexport NUM_DIR=~/.nvm\nsource $(brew --prefix nvm)/nvm.sh\n```\n\n#### nvm 安装 node.js\n\n安装完成后，重启终端并执行下列命令即可安装 Node.js。\n\n```bash\n$ nvm install stable\n```\n","slug":"如何安装Nodejs","published":1,"updated":"2017-03-24T15:09:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0nzdhf30004r139v72c0vjn","content":"<p>安装Node.js的方式有很多，这里推荐使用 <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"external\">nvm</a> 版本控制器进行安装。因为可以进行node.js版本管理，方便升级和倒退。</p>\n<h4 id=\"安装-nvm\"><a href=\"#安装-nvm\" class=\"headerlink\" title=\"安装 nvm\"></a>安装 nvm</h4><p><strong> 下载 nvm </strong></p>\n<p>curl：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure></p>\n<p>wget:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure></p>\n<p>brew:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ brew install nvm</div></pre></td></tr></table></figure></p>\n<p>完成后 nvm 就安装在了 ~/.nvm 目录，需要为 nvm 配置环境变量，即可在终端使用 nvm 了。</p>\n<p><strong> 配置 nvm 环境变量 </strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim ~/.bash_profile</div></pre></td></tr></table></figure>\n<p>添加如下内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">export</span> NVM_DIR=<span class=\"string\">\"<span class=\"variable\">$HOME</span>/.nvm\"</span></div><div class=\"line\">[ <span class=\"_\">-s</span> <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span> ] &amp;&amp; . <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span></div></pre></td></tr></table></figure>\n<p>brew 配置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">export</span> NUM_DIR=~/.nvm</div><div class=\"line\"><span class=\"built_in\">source</span> $(brew --prefix nvm)/nvm.sh</div></pre></td></tr></table></figure></p>\n<h4 id=\"nvm-安装-node-js\"><a href=\"#nvm-安装-node-js\" class=\"headerlink\" title=\"nvm 安装 node.js\"></a>nvm 安装 node.js</h4><p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ nvm install stable</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>安装Node.js的方式有很多，这里推荐使用 <a href=\"https://github.com/creationix/nvm\">nvm</a> 版本控制器进行安装。因为可以进行node.js版本管理，方便升级和倒退。</p>\n<h4 id=\"安装-nvm\"><a href=\"#安装-nvm\" class=\"headerlink\" title=\"安装 nvm\"></a>安装 nvm</h4><p><strong> 下载 nvm </strong></p>\n<p>curl：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure></p>\n<p>wget:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure></p>\n<p>brew:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ brew install nvm</div></pre></td></tr></table></figure></p>\n<p>完成后 nvm 就安装在了 ~/.nvm 目录，需要为 nvm 配置环境变量，即可在终端使用 nvm 了。</p>\n<p><strong> 配置 nvm 环境变量 </strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim ~/.bash_profile</div></pre></td></tr></table></figure>\n<p>添加如下内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">export</span> NVM_DIR=<span class=\"string\">\"<span class=\"variable\">$HOME</span>/.nvm\"</span></div><div class=\"line\">[ <span class=\"_\">-s</span> <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span> ] &amp;&amp; . <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span></div></pre></td></tr></table></figure>\n<p>brew 配置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">export</span> NUM_DIR=~/.nvm</div><div class=\"line\"><span class=\"built_in\">source</span> $(brew --prefix nvm)/nvm.sh</div></pre></td></tr></table></figure></p>\n<h4 id=\"nvm-安装-node-js\"><a href=\"#nvm-安装-node-js\" class=\"headerlink\" title=\"nvm 安装 node.js\"></a>nvm 安装 node.js</h4><p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ nvm install stable</div></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj0nzdher0000r13995nris66","tag_id":"cj0nzdhf10003r139nwr5an7k","_id":"cj0nzdhf80006r139flne6oyy"},{"post_id":"cj0nzdhex0002r139ssju3b2u","tag_id":"cj0nzdhf70005r139d5583uj6","_id":"cj0nzdhf80008r13913e8z995"},{"post_id":"cj0nzdhf30004r139v72c0vjn","tag_id":"cj0nzdhf80007r139sepliv7l","_id":"cj0nzdhf80009r139kg1aob04"}],"Tag":[{"name":"hexo","_id":"cj0nzdhf10003r139nwr5an7k"},{"name":"git","_id":"cj0nzdhf70005r139d5583uj6"},{"name":"node.js","_id":"cj0nzdhf80007r139sepliv7l"}]}}